{"version":3,"sources":["./node_modules/@abp/ng.account/__ivy_ngcc__/fesm2015/abp-ng.account.js"],"names":[],"mappings":"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","file":"abp-ng-account-es2015.js","sourcesContent":["import * as i1 from '@abp/ng.core';\nimport { SubscriptionService, MultiTenancyService, ConfigStateService, RestService, AuthService, InternalStore, ProfileService, DynamicLayoutComponent, ReplaceableRouteContainerComponent, AuthGuard, AbpTenantService, SessionStateService, AbpApplicationConfigurationService, LazyModuleFactory, CoreModule } from '@abp/ng.core';\nimport { ToasterService, fadeIn, getPasswordValidators, ThemeSharedModule } from '@abp/ng.theme.shared';\nimport * as i0 from '@angular/core';\nimport { Component, Injectable, InjectionToken, Injector, NgModule } from '@angular/core';\nimport { NgbDropdownModule } from '@ng-bootstrap/ng-bootstrap';\nimport { comparePasswords, NgxValidateCoreModule } from '@ngx-validate/core';\nimport { ActivatedRoute, Router, RouterModule } from '@angular/router';\nimport { map, finalize, catchError, switchMap } from 'rxjs/operators';\nimport { Validators, FormBuilder, FormControl } from '@angular/forms';\nimport { throwError } from 'rxjs';\nimport snq from 'snq';\nimport { trigger, transition, useAnimation } from '@angular/animations';\nimport { __rest } from 'tslib';\n\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@abp/ng.core';\nimport * as ɵngcc2 from '@angular/common';\nimport * as ɵngcc3 from '@angular/router';\nimport * as ɵngcc4 from '@angular/forms';\nimport * as ɵngcc5 from '@ngx-validate/core';\nimport * as ɵngcc6 from '@abp/ng.theme.shared';\n\nfunction AuthWrapperComponent_ng_container_2_abp_tenant_box_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"abp-tenant-box\");\n} }\nconst _c0 = function (a0) { return { componentKey: a0 }; };\nfunction AuthWrapperComponent_ng_container_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵtemplate(1, AuthWrapperComponent_ng_container_2_abp_tenant_box_1_Template, 1, 0, \"abp-tenant-box\", 6);\n    ɵngcc0.ɵɵelementContainerEnd();\n} if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"abpReplaceableTemplate\", ɵngcc0.ɵɵpureFunction1(1, _c0, ctx_r0.tenantBoxKey));\n} }\nfunction AuthWrapperComponent_div_5_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 7);\n    ɵngcc0.ɵɵelementStart(1, \"div\", 8);\n    ɵngcc0.ɵɵelement(2, \"router-outlet\");\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n} }\nfunction AuthWrapperComponent_ng_template_7_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 9);\n    ɵngcc0.ɵɵelementStart(1, \"strong\");\n    ɵngcc0.ɵɵtext(2);\n    ɵngcc0.ɵɵpipe(3, \"abpLocalization\");\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵtext(4);\n    ɵngcc0.ɵɵpipe(5, \"abpLocalization\");\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(3, 2, \"AbpAccount::InvalidLoginRequest\"));\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", ɵngcc0.ɵɵpipeBind1(5, 4, \"AbpAccount::ThereAreNoLoginSchemesConfiguredForThisClient\"), \" \");\n} }\nfunction ForgotPasswordComponent_form_3_Template(rf, ctx) { if (rf & 1) {\n    const _r4 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"form\", 2);\n    ɵngcc0.ɵɵlistener(\"ngSubmit\", function ForgotPasswordComponent_form_3_Template_form_ngSubmit_0_listener() { ɵngcc0.ɵɵrestoreView(_r4); const ctx_r3 = ɵngcc0.ɵɵnextContext(); return ctx_r3.onSubmit(); });\n    ɵngcc0.ɵɵelementStart(1, \"p\");\n    ɵngcc0.ɵɵtext(2);\n    ɵngcc0.ɵɵpipe(3, \"abpLocalization\");\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(4, \"div\", 3);\n    ɵngcc0.ɵɵelementStart(5, \"label\", 4);\n    ɵngcc0.ɵɵtext(6);\n    ɵngcc0.ɵɵpipe(7, \"abpLocalization\");\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(8, \"span\");\n    ɵngcc0.ɵɵtext(9, \" * \");\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelement(10, \"input\", 5);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(11, \"abp-button\", 6);\n    ɵngcc0.ɵɵtext(12);\n    ɵngcc0.ɵɵpipe(13, \"abpLocalization\");\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(14, \"a\", 7);\n    ɵngcc0.ɵɵelement(15, \"i\", 8);\n    ɵngcc0.ɵɵtext(16);\n    ɵngcc0.ɵɵpipe(17, \"abpLocalization\");\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"formGroup\", ctx_r0.form);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(3, 7, \"AbpAccount::SendPasswordResetLink_Information\"));\n    ɵngcc0.ɵɵadvance(4);\n    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(7, 9, \"AbpAccount::EmailAddress\"));\n    ɵngcc0.ɵɵadvance(5);\n    ɵngcc0.ɵɵproperty(\"loading\", ctx_r0.inProgress)(\"disabled\", ctx_r0.form == null ? null : ctx_r0.form.invalid);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", ɵngcc0.ɵɵpipeBind1(13, 11, \"AbpAccount::Submit\"), \" \");\n    ɵngcc0.ɵɵadvance(4);\n    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(17, 13, \"AbpAccount::Login\"));\n} }\nfunction ForgotPasswordComponent_ng_template_4_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"p\");\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵpipe(2, \"abpLocalization\");\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(3, \"a\", 7);\n    ɵngcc0.ɵɵelementStart(4, \"button\", 9);\n    ɵngcc0.ɵɵelement(5, \"i\", 8);\n    ɵngcc0.ɵɵtext(6);\n    ɵngcc0.ɵɵpipe(7, \"abpLocalization\");\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", ɵngcc0.ɵɵpipeBind1(2, 2, \"AbpAccount::PasswordResetMailSentMessage\"), \" \");\n    ɵngcc0.ɵɵadvance(5);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", ɵngcc0.ɵɵpipeBind1(7, 4, \"AbpAccount::BackToLogin\"), \" \");\n} }\nfunction LoginComponent_strong_3_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"strong\");\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵpipe(2, \"abpLocalization\");\n    ɵngcc0.ɵɵelementStart(3, \"a\", 14);\n    ɵngcc0.ɵɵtext(4);\n    ɵngcc0.ɵɵpipe(5, \"abpLocalization\");\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", ɵngcc0.ɵɵpipeBind1(2, 2, \"AbpAccount::AreYouANewUser\"), \" \");\n    ɵngcc0.ɵɵadvance(3);\n    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(5, 4, \"AbpAccount::Register\"));\n} }\nconst _c1 = function (a0) { return { active: a0 }; };\nfunction ManageProfileComponent_li_7_Template(rf, ctx) { if (rf & 1) {\n    const _r3 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"li\", 10);\n    ɵngcc0.ɵɵlistener(\"click\", function ManageProfileComponent_li_7_Template_li_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r3); const ctx_r2 = ɵngcc0.ɵɵnextContext(); return ctx_r2.selectedTab = 0; });\n    ɵngcc0.ɵɵelementStart(1, \"a\", 8);\n    ɵngcc0.ɵɵtext(2);\n    ɵngcc0.ɵɵpipe(3, \"abpLocalization\");\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngClass\", ɵngcc0.ɵɵpureFunction1(4, _c1, ctx_r0.selectedTab === 0));\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(3, 2, \"AbpUi::ChangePassword\"));\n} }\nfunction ManageProfileComponent_div_13_div_1_abp_change_password_form_6_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"abp-change-password-form\");\n} }\nfunction ManageProfileComponent_div_13_div_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 13);\n    ɵngcc0.ɵɵelementStart(1, \"div\", 14);\n    ɵngcc0.ɵɵelementStart(2, \"h4\");\n    ɵngcc0.ɵɵtext(3);\n    ɵngcc0.ɵɵpipe(4, \"abpLocalization\");\n    ɵngcc0.ɵɵelement(5, \"hr\");\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵtemplate(6, ManageProfileComponent_div_13_div_1_abp_change_password_form_6_Template, 1, 0, \"abp-change-password-form\", 15);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r4 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"@fadeIn\", undefined);\n    ɵngcc0.ɵɵadvance(3);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", ɵngcc0.ɵɵpipeBind1(4, 3, \"AbpIdentity::ChangePassword\"), \" \");\n    ɵngcc0.ɵɵadvance(3);\n    ɵngcc0.ɵɵproperty(\"abpReplaceableTemplate\", ɵngcc0.ɵɵpureFunction1(5, _c0, ctx_r4.changePasswordKey));\n} }\nfunction ManageProfileComponent_div_13_div_2_abp_personal_settings_form_6_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"abp-personal-settings-form\");\n} }\nfunction ManageProfileComponent_div_13_div_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 13);\n    ɵngcc0.ɵɵelementStart(1, \"div\", 14);\n    ɵngcc0.ɵɵelementStart(2, \"h4\");\n    ɵngcc0.ɵɵtext(3);\n    ɵngcc0.ɵɵpipe(4, \"abpLocalization\");\n    ɵngcc0.ɵɵelement(5, \"hr\");\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵtemplate(6, ManageProfileComponent_div_13_div_2_abp_personal_settings_form_6_Template, 1, 0, \"abp-personal-settings-form\", 15);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r5 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"@fadeIn\", undefined);\n    ɵngcc0.ɵɵadvance(3);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", ɵngcc0.ɵɵpipeBind1(4, 3, \"AbpIdentity::PersonalSettings\"), \" \");\n    ɵngcc0.ɵɵadvance(3);\n    ɵngcc0.ɵɵproperty(\"abpReplaceableTemplate\", ɵngcc0.ɵɵpureFunction1(5, _c0, ctx_r5.personalSettingsKey));\n} }\nfunction ManageProfileComponent_div_13_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 11);\n    ɵngcc0.ɵɵtemplate(1, ManageProfileComponent_div_13_div_1_Template, 7, 7, \"div\", 12);\n    ɵngcc0.ɵɵtemplate(2, ManageProfileComponent_div_13_div_2_Template, 7, 7, \"div\", 12);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r1.selectedTab === 0);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r1.selectedTab === 1);\n} }\nfunction RegisterComponent_form_9_Template(rf, ctx) { if (rf & 1) {\n    const _r2 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"form\", 2);\n    ɵngcc0.ɵɵlistener(\"ngSubmit\", function RegisterComponent_form_9_Template_form_ngSubmit_0_listener() { ɵngcc0.ɵɵrestoreView(_r2); const ctx_r1 = ɵngcc0.ɵɵnextContext(); return ctx_r1.onSubmit(); });\n    ɵngcc0.ɵɵelementStart(1, \"div\", 3);\n    ɵngcc0.ɵɵelementStart(2, \"label\", 4);\n    ɵngcc0.ɵɵtext(3);\n    ɵngcc0.ɵɵpipe(4, \"abpLocalization\");\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(5, \"span\");\n    ɵngcc0.ɵɵtext(6, \" * \");\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelement(7, \"input\", 5);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(8, \"div\", 3);\n    ɵngcc0.ɵɵelementStart(9, \"label\", 6);\n    ɵngcc0.ɵɵtext(10);\n    ɵngcc0.ɵɵpipe(11, \"abpLocalization\");\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(12, \"span\");\n    ɵngcc0.ɵɵtext(13, \" * \");\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelement(14, \"input\", 7);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(15, \"div\", 3);\n    ɵngcc0.ɵɵelementStart(16, \"label\", 8);\n    ɵngcc0.ɵɵtext(17);\n    ɵngcc0.ɵɵpipe(18, \"abpLocalization\");\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(19, \"span\");\n    ɵngcc0.ɵɵtext(20, \" * \");\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelement(21, \"input\", 9);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(22, \"abp-button\", 10);\n    ɵngcc0.ɵɵtext(23);\n    ɵngcc0.ɵɵpipe(24, \"abpLocalization\");\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"formGroup\", ctx_r0.form);\n    ɵngcc0.ɵɵadvance(3);\n    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(4, 6, \"AbpAccount::UserName\"));\n    ɵngcc0.ɵɵadvance(7);\n    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(11, 8, \"AbpAccount::EmailAddress\"));\n    ɵngcc0.ɵɵadvance(7);\n    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(18, 10, \"AbpAccount::Password\"));\n    ɵngcc0.ɵɵadvance(5);\n    ɵngcc0.ɵɵproperty(\"loading\", ctx_r0.inProgress);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", ɵngcc0.ɵɵpipeBind1(24, 12, \"AbpAccount::Register\"), \" \");\n} }\nfunction ResetPasswordComponent_form_3_Template(rf, ctx) { if (rf & 1) {\n    const _r4 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"form\", 2);\n    ɵngcc0.ɵɵlistener(\"ngSubmit\", function ResetPasswordComponent_form_3_Template_form_ngSubmit_0_listener() { ɵngcc0.ɵɵrestoreView(_r4); const ctx_r3 = ɵngcc0.ɵɵnextContext(); return ctx_r3.onSubmit(); });\n    ɵngcc0.ɵɵelementStart(1, \"p\");\n    ɵngcc0.ɵɵtext(2);\n    ɵngcc0.ɵɵpipe(3, \"abpLocalization\");\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(4, \"div\", 3);\n    ɵngcc0.ɵɵelementStart(5, \"label\", 4);\n    ɵngcc0.ɵɵtext(6);\n    ɵngcc0.ɵɵpipe(7, \"abpLocalization\");\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(8, \"span\");\n    ɵngcc0.ɵɵtext(9, \" * \");\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelement(10, \"input\", 5);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(11, \"div\", 3);\n    ɵngcc0.ɵɵelementStart(12, \"label\", 6);\n    ɵngcc0.ɵɵtext(13);\n    ɵngcc0.ɵɵpipe(14, \"abpLocalization\");\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(15, \"span\");\n    ɵngcc0.ɵɵtext(16, \" * \");\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelement(17, \"input\", 7);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(18, \"button\", 8);\n    ɵngcc0.ɵɵtext(19);\n    ɵngcc0.ɵɵpipe(20, \"abpLocalization\");\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(21, \"abp-button\", 9);\n    ɵngcc0.ɵɵlistener(\"click\", function ResetPasswordComponent_form_3_Template_abp_button_click_21_listener() { ɵngcc0.ɵɵrestoreView(_r4); const ctx_r5 = ɵngcc0.ɵɵnextContext(); return ctx_r5.onSubmit(); });\n    ɵngcc0.ɵɵtext(22);\n    ɵngcc0.ɵɵpipe(23, \"abpLocalization\");\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"formGroup\", ctx_r0.form)(\"mapErrorsFn\", ctx_r0.mapErrorsFn);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(3, 8, \"AbpAccount::ResetPassword_Information\"));\n    ɵngcc0.ɵɵadvance(4);\n    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(7, 10, \"AbpAccount::Password\"));\n    ɵngcc0.ɵɵadvance(7);\n    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(14, 12, \"AbpAccount::ConfirmPassword\"));\n    ɵngcc0.ɵɵadvance(6);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", ɵngcc0.ɵɵpipeBind1(20, 14, \"AbpAccount::Cancel\"), \" \");\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"loading\", ctx_r0.inProgress);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", ɵngcc0.ɵɵpipeBind1(23, 16, \"AbpAccount::Submit\"), \" \");\n} }\nfunction ResetPasswordComponent_ng_template_4_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"p\");\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵpipe(2, \"abpLocalization\");\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(3, \"a\", 10);\n    ɵngcc0.ɵɵelementStart(4, \"button\", 11);\n    ɵngcc0.ɵɵtext(5);\n    ɵngcc0.ɵɵpipe(6, \"abpLocalization\");\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", ɵngcc0.ɵɵpipeBind1(2, 2, \"AbpAccount::YourPasswordIsSuccessfullyReset\"), \" \");\n    ɵngcc0.ɵɵadvance(4);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", ɵngcc0.ɵɵpipeBind1(6, 4, \"AbpAccount::BackToLogin\"), \" \");\n} }\nfunction ChangePasswordComponent_div_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 2);\n    ɵngcc0.ɵɵelementStart(1, \"label\", 8);\n    ɵngcc0.ɵɵtext(2);\n    ɵngcc0.ɵɵpipe(3, \"abpLocalization\");\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(4, \"span\");\n    ɵngcc0.ɵɵtext(5, \" * \");\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelement(6, \"input\", 9);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(3, 1, \"AbpIdentity::DisplayName:CurrentPassword\"));\n} }\nfunction PersonalSettingsComponent_form_0_Template(rf, ctx) { if (rf & 1) {\n    const _r2 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"form\", 1);\n    ɵngcc0.ɵɵlistener(\"ngSubmit\", function PersonalSettingsComponent_form_0_Template_form_ngSubmit_0_listener() { ɵngcc0.ɵɵrestoreView(_r2); const ctx_r1 = ɵngcc0.ɵɵnextContext(); return ctx_r1.submit(); });\n    ɵngcc0.ɵɵelementStart(1, \"div\", 2);\n    ɵngcc0.ɵɵelementStart(2, \"label\", 3);\n    ɵngcc0.ɵɵtext(3);\n    ɵngcc0.ɵɵpipe(4, \"abpLocalization\");\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(5, \"span\");\n    ɵngcc0.ɵɵtext(6, \" * \");\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(7, \"input\", 4);\n    ɵngcc0.ɵɵlistener(\"keydown.space\", function PersonalSettingsComponent_form_0_Template_input_keydown_space_7_listener($event) { return $event.preventDefault(); });\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(8, \"div\", 5);\n    ɵngcc0.ɵɵelementStart(9, \"div\", 6);\n    ɵngcc0.ɵɵelementStart(10, \"div\", 2);\n    ɵngcc0.ɵɵelementStart(11, \"label\", 7);\n    ɵngcc0.ɵɵtext(12);\n    ɵngcc0.ɵɵpipe(13, \"abpLocalization\");\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelement(14, \"input\", 8);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(15, \"div\", 6);\n    ɵngcc0.ɵɵelementStart(16, \"div\", 2);\n    ɵngcc0.ɵɵelementStart(17, \"label\", 9);\n    ɵngcc0.ɵɵtext(18);\n    ɵngcc0.ɵɵpipe(19, \"abpLocalization\");\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelement(20, \"input\", 10);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(21, \"div\", 2);\n    ɵngcc0.ɵɵelementStart(22, \"label\", 11);\n    ɵngcc0.ɵɵtext(23);\n    ɵngcc0.ɵɵpipe(24, \"abpLocalization\");\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(25, \"span\");\n    ɵngcc0.ɵɵtext(26, \" * \");\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelement(27, \"input\", 12);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(28, \"div\", 2);\n    ɵngcc0.ɵɵelementStart(29, \"label\", 13);\n    ɵngcc0.ɵɵtext(30);\n    ɵngcc0.ɵɵpipe(31, \"abpLocalization\");\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelement(32, \"input\", 14);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(33, \"abp-button\", 15);\n    ɵngcc0.ɵɵtext(34);\n    ɵngcc0.ɵɵpipe(35, \"abpLocalization\");\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"formGroup\", ctx_r0.form);\n    ɵngcc0.ɵɵadvance(3);\n    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(4, 9, \"AbpIdentity::DisplayName:UserName\"));\n    ɵngcc0.ɵɵadvance(9);\n    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(13, 11, \"AbpIdentity::DisplayName:Name\"));\n    ɵngcc0.ɵɵadvance(6);\n    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(19, 13, \"AbpIdentity::DisplayName:Surname\"));\n    ɵngcc0.ɵɵadvance(5);\n    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(24, 15, \"AbpIdentity::DisplayName:Email\"));\n    ɵngcc0.ɵɵadvance(7);\n    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(31, 17, \"AbpIdentity::DisplayName:PhoneNumber\"));\n    ɵngcc0.ɵɵadvance(3);\n    ɵngcc0.ɵɵproperty(\"loading\", ctx_r0.inProgress)(\"disabled\", ctx_r0.form == null ? null : ctx_r0.form.invalid);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", ɵngcc0.ɵɵpipeBind1(35, 19, \"AbpIdentity::Save\"), \"\");\n} }\nfunction TenantBoxComponent_ng_container_0_ng_template_18_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"h5\");\n    ɵngcc0.ɵɵtext(1, \"Switch Tenant\");\n    ɵngcc0.ɵɵelementEnd();\n} }\nfunction TenantBoxComponent_ng_container_0_ng_template_20_Template(rf, ctx) { if (rf & 1) {\n    const _r9 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"form\", 13);\n    ɵngcc0.ɵɵlistener(\"ngSubmit\", function TenantBoxComponent_ng_container_0_ng_template_20_Template_form_ngSubmit_0_listener() { ɵngcc0.ɵɵrestoreView(_r9); const ctx_r8 = ɵngcc0.ɵɵnextContext(2); return ctx_r8.save(); });\n    ɵngcc0.ɵɵelementStart(1, \"div\", 14);\n    ɵngcc0.ɵɵelementStart(2, \"div\", 15);\n    ɵngcc0.ɵɵelementStart(3, \"label\", 16);\n    ɵngcc0.ɵɵtext(4);\n    ɵngcc0.ɵɵpipe(5, \"abpLocalization\");\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(6, \"input\", 17);\n    ɵngcc0.ɵɵlistener(\"ngModelChange\", function TenantBoxComponent_ng_container_0_ng_template_20_Template_input_ngModelChange_6_listener($event) { ɵngcc0.ɵɵrestoreView(_r9); const ctx_r10 = ɵngcc0.ɵɵnextContext(2); return ctx_r10.name = $event; });\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(7, \"p\");\n    ɵngcc0.ɵɵtext(8);\n    ɵngcc0.ɵɵpipe(9, \"abpLocalization\");\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r5 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(4);\n    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(5, 3, \"AbpUiMultiTenancy::Name\"));\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngModel\", ctx_r5.name);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(9, 5, \"AbpUiMultiTenancy::SwitchTenantHint\"));\n} }\nfunction TenantBoxComponent_ng_container_0_ng_template_22_Template(rf, ctx) { if (rf & 1) {\n    const _r12 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"button\", 18);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵpipe(2, \"abpLocalization\");\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(3, \"abp-button\", 19);\n    ɵngcc0.ɵɵlistener(\"click\", function TenantBoxComponent_ng_container_0_ng_template_22_Template_abp_button_click_3_listener() { ɵngcc0.ɵɵrestoreView(_r12); const ctx_r11 = ɵngcc0.ɵɵnextContext(2); return ctx_r11.save(); });\n    ɵngcc0.ɵɵelementStart(4, \"span\");\n    ɵngcc0.ɵɵtext(5);\n    ɵngcc0.ɵɵpipe(6, \"abpLocalization\");\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const currentTenant_r1 = ɵngcc0.ɵɵnextContext().ngIf;\n    const ctx_r7 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", ɵngcc0.ɵɵpipeBind1(2, 3, \"AbpTenantManagement::Cancel\"), \" \");\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"disabled\", (currentTenant_r1 == null ? null : currentTenant_r1.name) === ctx_r7.name);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(6, 5, \"AbpTenantManagement::Save\"));\n} }\nfunction TenantBoxComponent_ng_container_0_Template(rf, ctx) { if (rf & 1) {\n    const _r15 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵelementStart(1, \"div\", 1);\n    ɵngcc0.ɵɵelementStart(2, \"div\", 2);\n    ɵngcc0.ɵɵelementStart(3, \"div\", 3);\n    ɵngcc0.ɵɵelementStart(4, \"div\", 4);\n    ɵngcc0.ɵɵelementStart(5, \"span\", 5);\n    ɵngcc0.ɵɵtext(6);\n    ɵngcc0.ɵɵpipe(7, \"abpLocalization\");\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelement(8, \"br\");\n    ɵngcc0.ɵɵelementStart(9, \"h6\", 6);\n    ɵngcc0.ɵɵelementStart(10, \"i\");\n    ɵngcc0.ɵɵtext(11);\n    ɵngcc0.ɵɵpipe(12, \"abpLocalization\");\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(13, \"div\", 7);\n    ɵngcc0.ɵɵelementStart(14, \"a\", 8);\n    ɵngcc0.ɵɵlistener(\"click\", function TenantBoxComponent_ng_container_0_Template_a_click_14_listener() { ɵngcc0.ɵɵrestoreView(_r15); const ctx_r14 = ɵngcc0.ɵɵnextContext(); return ctx_r14.onSwitch(); });\n    ɵngcc0.ɵɵtext(15);\n    ɵngcc0.ɵɵpipe(16, \"abpLocalization\");\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(17, \"abp-modal\", 9);\n    ɵngcc0.ɵɵlistener(\"visibleChange\", function TenantBoxComponent_ng_container_0_Template_abp_modal_visibleChange_17_listener($event) { ɵngcc0.ɵɵrestoreView(_r15); const ctx_r16 = ɵngcc0.ɵɵnextContext(); return ctx_r16.isModalVisible = $event; });\n    ɵngcc0.ɵɵtemplate(18, TenantBoxComponent_ng_container_0_ng_template_18_Template, 2, 0, \"ng-template\", null, 10, ɵngcc0.ɵɵtemplateRefExtractor);\n    ɵngcc0.ɵɵtemplate(20, TenantBoxComponent_ng_container_0_ng_template_20_Template, 10, 7, \"ng-template\", null, 11, ɵngcc0.ɵɵtemplateRefExtractor);\n    ɵngcc0.ɵɵtemplate(22, TenantBoxComponent_ng_container_0_ng_template_22_Template, 7, 7, \"ng-template\", null, 12, ɵngcc0.ɵɵtemplateRefExtractor);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementContainerEnd();\n} if (rf & 2) {\n    const currentTenant_r1 = ctx.ngIf;\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(6);\n    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(7, 5, \"AbpUiMultiTenancy::Tenant\"));\n    ɵngcc0.ɵɵadvance(5);\n    ɵngcc0.ɵɵtextInterpolate(currentTenant_r1.name || ɵngcc0.ɵɵpipeBind1(12, 7, \"AbpUiMultiTenancy::NotSelected\"));\n    ɵngcc0.ɵɵadvance(4);\n    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(16, 9, \"AbpUiMultiTenancy::Switch\"));\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"visible\", ctx_r0.isModalVisible)(\"busy\", ctx_r0.modalBusy);\n} }\nconst _c2 = function () { return {}; };\nclass AuthWrapperComponent {\r\n    constructor(multiTenancy, configState) {\r\n        this.multiTenancy = multiTenancy;\r\n        this.configState = configState;\r\n        this.isMultiTenancyEnabled$ = this.configState.getDeep$('multiTenancy.isEnabled');\r\n        this.tenantBoxKey = \"Account.TenantBoxComponent\" /* TenantBox */;\r\n    }\r\n    get enableLocalLogin$() {\r\n        return this.configState\r\n            .getSetting$('Abp.Account.EnableLocalLogin')\r\n            .pipe(map(value => (value === null || value === void 0 ? void 0 : value.toLowerCase()) !== 'false'));\r\n    }\r\n}\nAuthWrapperComponent.ɵfac = function AuthWrapperComponent_Factory(t) { return new (t || AuthWrapperComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.MultiTenancyService), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.ConfigStateService)); };\nAuthWrapperComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: AuthWrapperComponent, selectors: [[\"abp-auth-wrapper\"]], exportAs: [\"abpAuthWrapper\"], features: [ɵngcc0.ɵɵProvidersFeature([SubscriptionService])], decls: 9, vars: 7, consts: [[1, \"row\"], [1, \"mx-auto\", \"col\", \"col-md-5\"], [4, \"ngIf\"], [1, \"abp-account-container\"], [\"class\", \"card mt-3 shadow-sm rounded\", 4, \"ngIf\", \"ngIfElse\"], [\"disableLocalLoginTemplate\", \"\"], [4, \"abpReplaceableTemplate\"], [1, \"card\", \"mt-3\", \"shadow-sm\", \"rounded\"], [1, \"card-body\", \"p-5\"], [1, \"alert\", \"alert-warning\"]], template: function AuthWrapperComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵelementStart(1, \"div\", 1);\n        ɵngcc0.ɵɵtemplate(2, AuthWrapperComponent_ng_container_2_Template, 2, 3, \"ng-container\", 2);\n        ɵngcc0.ɵɵpipe(3, \"async\");\n        ɵngcc0.ɵɵelementStart(4, \"div\", 3);\n        ɵngcc0.ɵɵtemplate(5, AuthWrapperComponent_div_5_Template, 3, 0, \"div\", 4);\n        ɵngcc0.ɵɵpipe(6, \"async\");\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtemplate(7, AuthWrapperComponent_ng_template_7_Template, 6, 6, \"ng-template\", null, 5, ɵngcc0.ɵɵtemplateRefExtractor);\n    } if (rf & 2) {\n        const _r2 = ɵngcc0.ɵɵreference(8);\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ɵngcc0.ɵɵpipeBind1(3, 3, ctx.isMultiTenancyEnabled$) && ctx.multiTenancy.isTenantBoxVisible);\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ɵngcc0.ɵɵpipeBind1(6, 5, ctx.enableLocalLogin$))(\"ngIfElse\", _r2);\n    } }, directives: function () { return [ɵngcc2.NgIf, ɵngcc1.ReplaceableTemplateDirective, TenantBoxComponent, ɵngcc3.RouterOutlet]; }, pipes: function () { return [ɵngcc2.AsyncPipe, ɵngcc1.LocalizationPipe]; }, encapsulation: 2 });\r\nAuthWrapperComponent.ctorParameters = () => [\r\n    { type: MultiTenancyService },\r\n    { type: ConfigStateService }\r\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(AuthWrapperComponent, [{\n        type: Component,\n        args: [{\n                selector: 'abp-auth-wrapper',\n                template: \"<div class=\\\"row\\\">\\n  <div class=\\\"mx-auto col col-md-5\\\">\\n    <ng-container *ngIf=\\\"(isMultiTenancyEnabled$ | async) && multiTenancy.isTenantBoxVisible\\\">\\n      <abp-tenant-box *abpReplaceableTemplate=\\\"{ componentKey: tenantBoxKey }\\\"></abp-tenant-box>\\n    </ng-container>\\n\\n    <div class=\\\"abp-account-container\\\">\\n      <div\\n        *ngIf=\\\"enableLocalLogin$ | async; else disableLocalLoginTemplate\\\"\\n        class=\\\"card mt-3 shadow-sm rounded\\\"\\n      >\\n        <div class=\\\"card-body p-5\\\">\\n          <router-outlet></router-outlet>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\\n<ng-template #disableLocalLoginTemplate>\\n  <div class=\\\"alert alert-warning\\\">\\n    <strong>{{ 'AbpAccount::InvalidLoginRequest' | abpLocalization }}</strong>\\n    {{ 'AbpAccount::ThereAreNoLoginSchemesConfiguredForThisClient' | abpLocalization }}\\n  </div>\\n</ng-template>\\n\",\n                exportAs: 'abpAuthWrapper',\n                providers: [SubscriptionService]\n            }]\n    }], function () { return [{ type: ɵngcc1.MultiTenancyService }, { type: ɵngcc1.ConfigStateService }]; }, null); })();\n\nclass AccountService {\r\n    constructor(restService) {\r\n        this.restService = restService;\r\n        this.apiName = 'AbpAccount';\r\n        this.register = (input) => this.restService.request({\r\n            method: 'POST',\r\n            url: '/api/account/register',\r\n            body: input,\r\n        }, { apiName: this.apiName });\r\n        this.resetPassword = (input) => this.restService.request({\r\n            method: 'POST',\r\n            url: '/api/account/reset-password',\r\n            body: input,\r\n        }, { apiName: this.apiName });\r\n        this.sendPasswordResetCode = (input) => this.restService.request({\r\n            method: 'POST',\r\n            url: '/api/account/send-password-reset-code',\r\n            body: input,\r\n        }, { apiName: this.apiName });\r\n    }\r\n}\nAccountService.ɵfac = function AccountService_Factory(t) { return new (t || AccountService)(ɵngcc0.ɵɵinject(ɵngcc1.RestService)); };\r\nAccountService.ɵprov = i0.ɵɵdefineInjectable({ factory: function AccountService_Factory() { return new AccountService(i0.ɵɵinject(i1.RestService)); }, token: AccountService, providedIn: \"root\" });\r\nAccountService.ctorParameters = () => [\r\n    { type: RestService }\r\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(AccountService, [{\n        type: Injectable,\n        args: [{\n                providedIn: 'root'\n            }]\n    }], function () { return [{ type: ɵngcc1.RestService }]; }, null); })();\n\nclass ForgotPasswordComponent {\r\n    constructor(fb, accountService) {\r\n        this.fb = fb;\r\n        this.accountService = accountService;\r\n        this.isEmailSent = false;\r\n        this.form = this.fb.group({\r\n            email: ['', [Validators.required, Validators.email]],\r\n        });\r\n    }\r\n    onSubmit() {\r\n        if (this.form.invalid)\r\n            return;\r\n        this.inProgress = true;\r\n        this.accountService\r\n            .sendPasswordResetCode({ email: this.form.get('email').value, appName: 'Angular' })\r\n            .pipe(finalize(() => (this.inProgress = false)))\r\n            .subscribe(() => {\r\n            this.isEmailSent = true;\r\n        });\r\n    }\r\n}\nForgotPasswordComponent.ɵfac = function ForgotPasswordComponent_Factory(t) { return new (t || ForgotPasswordComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc4.FormBuilder), ɵngcc0.ɵɵdirectiveInject(AccountService)); };\nForgotPasswordComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: ForgotPasswordComponent, selectors: [[\"abp-forgot-password\"]], decls: 6, vars: 5, consts: [[\"validateOnSubmit\", \"\", 3, \"formGroup\", \"ngSubmit\", 4, \"ngIf\", \"ngIfElse\"], [\"emailSentTemplate\", \"\"], [\"validateOnSubmit\", \"\", 3, \"formGroup\", \"ngSubmit\"], [1, \"form-group\"], [\"for\", \"input-email-address\"], [\"type\", \"email\", \"id\", \"input-email-address\", \"formControlName\", \"email\", 1, \"form-control\"], [\"buttonClass\", \"mt-2 mb-3 btn btn-primary btn-block\", \"buttonType\", \"submit\", 1, \"d-block\", 3, \"loading\", \"disabled\"], [\"routerLink\", \"/account/login\"], [1, \"fa\", \"fa-long-arrow-left\", \"mr-1\"], [1, \"d-block\", \"mt-2\", \"mb-3\", \"btn\", \"btn-primary\", \"btn-block\"]], template: function ForgotPasswordComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"h4\");\n        ɵngcc0.ɵɵtext(1);\n        ɵngcc0.ɵɵpipe(2, \"abpLocalization\");\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtemplate(3, ForgotPasswordComponent_form_3_Template, 18, 15, \"form\", 0);\n        ɵngcc0.ɵɵtemplate(4, ForgotPasswordComponent_ng_template_4_Template, 8, 6, \"ng-template\", null, 1, ɵngcc0.ɵɵtemplateRefExtractor);\n    } if (rf & 2) {\n        const _r1 = ɵngcc0.ɵɵreference(5);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(2, 3, \"AbpAccount::ForgotPassword\"));\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"ngIf\", !ctx.isEmailSent)(\"ngIfElse\", _r1);\n    } }, directives: [ɵngcc2.NgIf, ɵngcc4.ɵangular_packages_forms_forms_y, ɵngcc4.NgControlStatusGroup, ɵngcc1.FormSubmitDirective, ɵngcc4.FormGroupDirective, ɵngcc5.ValidationGroupDirective, ɵngcc4.DefaultValueAccessor, ɵngcc4.NgControlStatus, ɵngcc4.FormControlName, ɵngcc5.ValidationDirective, ɵngcc6.ButtonComponent, ɵngcc3.RouterLinkWithHref], pipes: [ɵngcc1.LocalizationPipe], encapsulation: 2 });\r\nForgotPasswordComponent.ctorParameters = () => [\r\n    { type: FormBuilder },\r\n    { type: AccountService }\r\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ForgotPasswordComponent, [{\n        type: Component,\n        args: [{\n                selector: 'abp-forgot-password',\n                template: \"<h4>{{ 'AbpAccount::ForgotPassword' | abpLocalization }}</h4>\\n\\n<form\\n  *ngIf=\\\"!isEmailSent; else emailSentTemplate\\\"\\n  [formGroup]=\\\"form\\\"\\n  (ngSubmit)=\\\"onSubmit()\\\"\\n  validateOnSubmit\\n>\\n  <p>{{ 'AbpAccount::SendPasswordResetLink_Information' | abpLocalization }}</p>\\n  <div class=\\\"form-group\\\">\\n    <label for=\\\"input-email-address\\\">{{ 'AbpAccount::EmailAddress' | abpLocalization }}</label\\n    ><span> * </span>\\n    <input type=\\\"email\\\" id=\\\"input-email-address\\\" class=\\\"form-control\\\" formControlName=\\\"email\\\" />\\n  </div>\\n  <abp-button\\n    class=\\\"d-block\\\"\\n    buttonClass=\\\"mt-2 mb-3 btn btn-primary btn-block\\\"\\n    [loading]=\\\"inProgress\\\"\\n    buttonType=\\\"submit\\\"\\n    [disabled]=\\\"form?.invalid\\\"\\n  >\\n    {{ 'AbpAccount::Submit' | abpLocalization }}\\n  </abp-button>\\n  <a routerLink=\\\"/account/login\\\"\\n    ><i class=\\\"fa fa-long-arrow-left mr-1\\\"></i>{{ 'AbpAccount::Login' | abpLocalization }}</a\\n  >\\n</form>\\n\\n<ng-template #emailSentTemplate>\\n  <p>\\n    {{ 'AbpAccount::PasswordResetMailSentMessage' | abpLocalization }}\\n  </p>\\n\\n  <a routerLink=\\\"/account/login\\\">\\n    <button class=\\\"d-block mt-2 mb-3 btn btn-primary btn-block\\\">\\n      <i class=\\\"fa fa-long-arrow-left mr-1\\\"></i>\\n      {{ 'AbpAccount::BackToLogin' | abpLocalization }}\\n    </button>\\n  </a>\\n</ng-template>\\n\"\n            }]\n    }], function () { return [{ type: ɵngcc4.FormBuilder }, { type: AccountService }]; }, null); })();\n\nconst ACCOUNT_CONFIG_OPTIONS = new InjectionToken('ACCOUNT_CONFIG_OPTIONS');\n\nfunction getRedirectUrl(injector) {\r\n    const route = injector.get(ActivatedRoute);\r\n    const options = injector.get(ACCOUNT_CONFIG_OPTIONS);\r\n    return route.snapshot.queryParams.returnUrl || options.redirectUrl || '/';\r\n}\n\nconst { maxLength: maxLength$2, required: required$3 } = Validators;\r\nclass LoginComponent {\r\n    constructor(injector, fb, toasterService, authService, configState) {\r\n        this.injector = injector;\r\n        this.fb = fb;\r\n        this.toasterService = toasterService;\r\n        this.authService = authService;\r\n        this.configState = configState;\r\n        this.isSelfRegistrationEnabled = true;\r\n        this.authWrapperKey = \"Account.AuthWrapperComponent\" /* AuthWrapper */;\r\n    }\r\n    ngOnInit() {\r\n        this.init();\r\n        this.buildForm();\r\n    }\r\n    init() {\r\n        this.isSelfRegistrationEnabled =\r\n            (this.configState.getSetting('Abp.Account.IsSelfRegistrationEnabled') || '').toLowerCase() !== 'false';\r\n    }\r\n    buildForm() {\r\n        this.form = this.fb.group({\r\n            username: ['', [required$3, maxLength$2(255)]],\r\n            password: ['', [required$3, maxLength$2(128)]],\r\n            rememberMe: [false],\r\n        });\r\n    }\r\n    onSubmit() {\r\n        if (this.form.invalid)\r\n            return;\r\n        this.inProgress = true;\r\n        const { username, password, rememberMe } = this.form.value;\r\n        const redirectUrl = getRedirectUrl(this.injector);\r\n        this.authService\r\n            .login({ username, password, rememberMe, redirectUrl })\r\n            .pipe(catchError(err => {\r\n            this.toasterService.error(snq(() => err.error.error_description) ||\r\n                snq(() => err.error.error.message, 'AbpAccount::DefaultErrorMessage'), 'Error', { life: 7000 });\r\n            return throwError(err);\r\n        }), finalize(() => (this.inProgress = false)))\r\n            .subscribe();\r\n    }\r\n}\nLoginComponent.ɵfac = function LoginComponent_Factory(t) { return new (t || LoginComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Injector), ɵngcc0.ɵɵdirectiveInject(ɵngcc4.FormBuilder), ɵngcc0.ɵɵdirectiveInject(ɵngcc6.ToasterService), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.AuthService), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.ConfigStateService)); };\nLoginComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: LoginComponent, selectors: [[\"abp-login\"]], decls: 28, vars: 21, consts: [[4, \"ngIf\"], [\"validateOnSubmit\", \"\", 1, \"mt-4\", 3, \"formGroup\", \"ngSubmit\"], [1, \"form-group\"], [\"for\", \"login-input-user-name-or-email-address\"], [\"type\", \"text\", \"id\", \"login-input-user-name-or-email-address\", \"formControlName\", \"username\", \"autocomplete\", \"username\", \"autofocus\", \"\", 1, \"form-control\"], [\"for\", \"login-input-password\"], [\"type\", \"password\", \"id\", \"login-input-password\", \"formControlName\", \"password\", \"autocomplete\", \"current-password\", 1, \"form-control\"], [1, \"row\"], [1, \"col\"], [\"for\", \"login-input-remember-me\", 1, \"custom-checkbox\", \"custom-control\", \"mb-2\"], [\"type\", \"checkbox\", \"id\", \"login-input-remember-me\", \"formControlName\", \"rememberMe\", 1, \"form-check-input\"], [1, \"text-right\", \"col\"], [\"routerLink\", \"/account/forgot-password\"], [\"buttonType\", \"submit\", \"name\", \"Action\", \"buttonClass\", \"btn-block btn-lg mt-3 btn btn-primary\", 3, \"loading\"], [\"routerLink\", \"/account/register\", \"queryParamsHandling\", \"preserve\", 1, \"text-decoration-none\"]], template: function LoginComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"h4\");\n        ɵngcc0.ɵɵtext(1);\n        ɵngcc0.ɵɵpipe(2, \"abpLocalization\");\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtemplate(3, LoginComponent_strong_3_Template, 6, 6, \"strong\", 0);\n        ɵngcc0.ɵɵelementStart(4, \"form\", 1);\n        ɵngcc0.ɵɵlistener(\"ngSubmit\", function LoginComponent_Template_form_ngSubmit_4_listener() { return ctx.onSubmit(); });\n        ɵngcc0.ɵɵelementStart(5, \"div\", 2);\n        ɵngcc0.ɵɵelementStart(6, \"label\", 3);\n        ɵngcc0.ɵɵtext(7);\n        ɵngcc0.ɵɵpipe(8, \"abpLocalization\");\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelement(9, \"input\", 4);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(10, \"div\", 2);\n        ɵngcc0.ɵɵelementStart(11, \"label\", 5);\n        ɵngcc0.ɵɵtext(12);\n        ɵngcc0.ɵɵpipe(13, \"abpLocalization\");\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelement(14, \"input\", 6);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(15, \"div\", 7);\n        ɵngcc0.ɵɵelementStart(16, \"div\", 8);\n        ɵngcc0.ɵɵelementStart(17, \"label\", 9);\n        ɵngcc0.ɵɵelement(18, \"input\", 10);\n        ɵngcc0.ɵɵtext(19);\n        ɵngcc0.ɵɵpipe(20, \"abpLocalization\");\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(21, \"div\", 11);\n        ɵngcc0.ɵɵelementStart(22, \"a\", 12);\n        ɵngcc0.ɵɵtext(23);\n        ɵngcc0.ɵɵpipe(24, \"abpLocalization\");\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(25, \"abp-button\", 13);\n        ɵngcc0.ɵɵtext(26);\n        ɵngcc0.ɵɵpipe(27, \"abpLocalization\");\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(2, 9, \"AbpAccount::Login\"));\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.isSelfRegistrationEnabled);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"formGroup\", ctx.form);\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(8, 11, \"AbpAccount::UserNameOrEmailAddress\"));\n        ɵngcc0.ɵɵadvance(5);\n        ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(13, 13, \"AbpAccount::Password\"));\n        ɵngcc0.ɵɵadvance(7);\n        ɵngcc0.ɵɵtextInterpolate1(\" \", ɵngcc0.ɵɵpipeBind1(20, 15, \"AbpAccount::RememberMe\"), \" \");\n        ɵngcc0.ɵɵadvance(4);\n        ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(24, 17, \"AbpAccount::ForgotPassword\"));\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"loading\", ctx.inProgress);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵtextInterpolate1(\" \", ɵngcc0.ɵɵpipeBind1(27, 19, \"AbpAccount::Login\"), \" \");\n    } }, directives: [ɵngcc2.NgIf, ɵngcc4.ɵangular_packages_forms_forms_y, ɵngcc4.NgControlStatusGroup, ɵngcc1.FormSubmitDirective, ɵngcc4.FormGroupDirective, ɵngcc5.ValidationGroupDirective, ɵngcc4.DefaultValueAccessor, ɵngcc4.NgControlStatus, ɵngcc4.FormControlName, ɵngcc5.ValidationDirective, ɵngcc1.AutofocusDirective, ɵngcc4.CheckboxControlValueAccessor, ɵngcc3.RouterLinkWithHref, ɵngcc6.ButtonComponent], pipes: [ɵngcc1.LocalizationPipe], encapsulation: 2 });\r\nLoginComponent.ctorParameters = () => [\r\n    { type: Injector },\r\n    { type: FormBuilder },\r\n    { type: ToasterService },\r\n    { type: AuthService },\r\n    { type: ConfigStateService }\r\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(LoginComponent, [{\n        type: Component,\n        args: [{\n                selector: 'abp-login',\n                template: \"<h4>{{ 'AbpAccount::Login' | abpLocalization }}</h4>\\n<strong *ngIf=\\\"isSelfRegistrationEnabled\\\">\\n  {{ 'AbpAccount::AreYouANewUser' | abpLocalization }}\\n  <a class=\\\"text-decoration-none\\\" routerLink=\\\"/account/register\\\" queryParamsHandling=\\\"preserve\\\">{{\\n    'AbpAccount::Register' | abpLocalization\\n  }}</a>\\n</strong>\\n<form [formGroup]=\\\"form\\\" (ngSubmit)=\\\"onSubmit()\\\" validateOnSubmit class=\\\"mt-4\\\">\\n  <div class=\\\"form-group\\\">\\n    <label for=\\\"login-input-user-name-or-email-address\\\">{{\\n      'AbpAccount::UserNameOrEmailAddress' | abpLocalization\\n    }}</label>\\n    <input\\n      class=\\\"form-control\\\"\\n      type=\\\"text\\\"\\n      id=\\\"login-input-user-name-or-email-address\\\"\\n      formControlName=\\\"username\\\"\\n      autocomplete=\\\"username\\\"\\n      autofocus\\n    />\\n  </div>\\n  <div class=\\\"form-group\\\">\\n    <label for=\\\"login-input-password\\\">{{ 'AbpAccount::Password' | abpLocalization }}</label>\\n    <input\\n      class=\\\"form-control\\\"\\n      type=\\\"password\\\"\\n      id=\\\"login-input-password\\\"\\n      formControlName=\\\"password\\\"\\n      autocomplete=\\\"current-password\\\"\\n    />\\n  </div>\\n\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col\\\">\\n      <label class=\\\"custom-checkbox custom-control mb-2\\\" for=\\\"login-input-remember-me\\\">\\n        <input\\n          class=\\\"form-check-input\\\"\\n          type=\\\"checkbox\\\"\\n          id=\\\"login-input-remember-me\\\"\\n          formControlName=\\\"rememberMe\\\"\\n        />\\n        {{ 'AbpAccount::RememberMe' | abpLocalization }}\\n      </label>\\n    </div>\\n    <div class=\\\"text-right col\\\">\\n      <a routerLink=\\\"/account/forgot-password\\\">{{\\n        'AbpAccount::ForgotPassword' | abpLocalization\\n      }}</a>\\n    </div>\\n  </div>\\n\\n  <abp-button\\n    [loading]=\\\"inProgress\\\"\\n    buttonType=\\\"submit\\\"\\n    name=\\\"Action\\\"\\n    buttonClass=\\\"btn-block btn-lg mt-3 btn btn-primary\\\"\\n  >\\n    {{ 'AbpAccount::Login' | abpLocalization }}\\n  </abp-button>\\n</form>\\n\"\n            }]\n    }], function () { return [{ type: ɵngcc0.Injector }, { type: ɵngcc4.FormBuilder }, { type: ɵngcc6.ToasterService }, { type: ɵngcc1.AuthService }, { type: ɵngcc1.ConfigStateService }]; }, null); })();\n\nclass ManageProfileStateService {\r\n    constructor() {\r\n        this.store = new InternalStore({});\r\n    }\r\n    get createOnUpdateStream() {\r\n        return this.store.sliceUpdate;\r\n    }\r\n    getProfile$() {\r\n        return this.store.sliceState(state => state.profile);\r\n    }\r\n    getProfile() {\r\n        return this.store.state.profile;\r\n    }\r\n    setProfile(profile) {\r\n        this.store.patch({ profile });\r\n    }\r\n}\nManageProfileStateService.ɵfac = function ManageProfileStateService_Factory(t) { return new (t || ManageProfileStateService)(); };\r\nManageProfileStateService.ɵprov = i0.ɵɵdefineInjectable({ factory: function ManageProfileStateService_Factory() { return new ManageProfileStateService(); }, token: ManageProfileStateService, providedIn: \"root\" });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ManageProfileStateService, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return []; }, null); })();\n\nclass ManageProfileComponent {\r\n    constructor(profileService, manageProfileState) {\r\n        this.profileService = profileService;\r\n        this.manageProfileState = manageProfileState;\r\n        this.selectedTab = 0;\r\n        this.changePasswordKey = \"Account.ChangePasswordComponent\" /* ChangePassword */;\r\n        this.personalSettingsKey = \"Account.PersonalSettingsComponent\" /* PersonalSettings */;\r\n        this.profile$ = this.manageProfileState.getProfile$();\r\n    }\r\n    ngOnInit() {\r\n        this.profileService.get().subscribe(profile => {\r\n            this.manageProfileState.setProfile(profile);\r\n            if (profile.isExternal) {\r\n                this.hideChangePasswordTab = true;\r\n                this.selectedTab = 1;\r\n            }\r\n        });\r\n    }\r\n}\nManageProfileComponent.ɵfac = function ManageProfileComponent_Factory(t) { return new (t || ManageProfileComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.ProfileService), ɵngcc0.ɵɵdirectiveInject(ManageProfileStateService)); };\nManageProfileComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: ManageProfileComponent, selectors: [[\"abp-manage-profile\"]], decls: 15, vars: 15, consts: [[\"id\", \"AbpContentToolbar\"], [1, \"card\", \"border-0\", \"shadow-sm\", \"min-h-400\", 3, \"abpLoading\"], [1, \"card-body\"], [1, \"row\"], [1, \"col-12\", \"col-md-3\"], [\"id\", \"nav-tab\", \"role\", \"tablist\", 1, \"nav\", \"flex-column\", \"nav-pills\"], [\"class\", \"nav-item\", 3, \"click\", 4, \"ngIf\"], [1, \"nav-item\", \"mb-2\", 3, \"click\"], [\"role\", \"tab\", \"href\", \"javascript:void(0)\", 1, \"nav-link\", 3, \"ngClass\"], [\"class\", \"col-12 col-md-9\", 4, \"ngIf\"], [1, \"nav-item\", 3, \"click\"], [1, \"col-12\", \"col-md-9\"], [\"class\", \"tab-content\", 4, \"ngIf\"], [1, \"tab-content\"], [\"role\", \"tabpanel\", 1, \"tab-pane\", \"active\"], [4, \"abpReplaceableTemplate\"]], template: function ManageProfileComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelement(0, \"div\", 0);\n        ɵngcc0.ɵɵelementStart(1, \"div\", 1);\n        ɵngcc0.ɵɵpipe(2, \"async\");\n        ɵngcc0.ɵɵelementStart(3, \"div\", 2);\n        ɵngcc0.ɵɵelementStart(4, \"div\", 3);\n        ɵngcc0.ɵɵelementStart(5, \"div\", 4);\n        ɵngcc0.ɵɵelementStart(6, \"ul\", 5);\n        ɵngcc0.ɵɵtemplate(7, ManageProfileComponent_li_7_Template, 4, 6, \"li\", 6);\n        ɵngcc0.ɵɵpipe(8, \"async\");\n        ɵngcc0.ɵɵelementStart(9, \"li\", 7);\n        ɵngcc0.ɵɵlistener(\"click\", function ManageProfileComponent_Template_li_click_9_listener() { return ctx.selectedTab = 1; });\n        ɵngcc0.ɵɵelementStart(10, \"a\", 8);\n        ɵngcc0.ɵɵtext(11);\n        ɵngcc0.ɵɵpipe(12, \"abpLocalization\");\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtemplate(13, ManageProfileComponent_div_13_Template, 3, 2, \"div\", 9);\n        ɵngcc0.ɵɵpipe(14, \"async\");\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"abpLoading\", !ɵngcc0.ɵɵpipeBind1(2, 5, ctx.profile$));\n        ɵngcc0.ɵɵadvance(6);\n        ɵngcc0.ɵɵproperty(\"ngIf\", !ctx.hideChangePasswordTab && ɵngcc0.ɵɵpipeBind1(8, 7, ctx.profile$));\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵproperty(\"ngClass\", ɵngcc0.ɵɵpureFunction1(13, _c1, ctx.selectedTab === 1));\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(12, 9, \"AbpAccount::PersonalSettings\"));\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ɵngcc0.ɵɵpipeBind1(14, 11, ctx.profile$));\n    } }, directives: function () { return [ɵngcc6.LoadingDirective, ɵngcc2.NgIf, ɵngcc2.NgClass, ɵngcc1.ReplaceableTemplateDirective, ChangePasswordComponent, PersonalSettingsComponent]; }, pipes: function () { return [ɵngcc2.AsyncPipe, ɵngcc1.LocalizationPipe]; }, styles: [\".min-h-400[_ngcontent-%COMP%] {\\n        min-height: 400px;\\n      }\"], data: { animation: [trigger('fadeIn', [transition(':enter', useAnimation(fadeIn))])] } });\r\nManageProfileComponent.ctorParameters = () => [\r\n    { type: ProfileService },\r\n    { type: ManageProfileStateService }\r\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ManageProfileComponent, [{\n        type: Component,\n        args: [{\n                selector: 'abp-manage-profile',\n                template: \"<div id=\\\"AbpContentToolbar\\\"></div>\\n\\n<div class=\\\"card border-0 shadow-sm min-h-400\\\" [abpLoading]=\\\"!(profile$ | async)\\\">\\n  <div class=\\\"card-body\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-12 col-md-3\\\">\\n        <ul class=\\\"nav flex-column nav-pills\\\" id=\\\"nav-tab\\\" role=\\\"tablist\\\">\\n          <li\\n            *ngIf=\\\"!hideChangePasswordTab && (profile$ | async)\\\"\\n            class=\\\"nav-item\\\"\\n            (click)=\\\"selectedTab = 0\\\"\\n          >\\n            <a\\n              class=\\\"nav-link\\\"\\n              [ngClass]=\\\"{ active: selectedTab === 0 }\\\"\\n              role=\\\"tab\\\"\\n              href=\\\"javascript:void(0)\\\"\\n              >{{ 'AbpUi::ChangePassword' | abpLocalization }}</a\\n            >\\n          </li>\\n          <li class=\\\"nav-item mb-2\\\" (click)=\\\"selectedTab = 1\\\">\\n            <a\\n              class=\\\"nav-link\\\"\\n              [ngClass]=\\\"{ active: selectedTab === 1 }\\\"\\n              role=\\\"tab\\\"\\n              href=\\\"javascript:void(0)\\\"\\n              >{{ 'AbpAccount::PersonalSettings' | abpLocalization }}</a\\n            >\\n          </li>\\n        </ul>\\n      </div>\\n      <div *ngIf=\\\"profile$ | async\\\" class=\\\"col-12 col-md-9\\\">\\n        <div class=\\\"tab-content\\\" *ngIf=\\\"selectedTab === 0\\\" [@fadeIn]>\\n          <div class=\\\"tab-pane active\\\" role=\\\"tabpanel\\\">\\n            <h4>\\n              {{ 'AbpIdentity::ChangePassword' | abpLocalization }}\\n              <hr />\\n            </h4>\\n            <abp-change-password-form\\n              *abpReplaceableTemplate=\\\"{\\n                componentKey: changePasswordKey\\n              }\\\"\\n            ></abp-change-password-form>\\n          </div>\\n        </div>\\n        <div class=\\\"tab-content\\\" *ngIf=\\\"selectedTab === 1\\\" [@fadeIn]>\\n          <div class=\\\"tab-pane active\\\" role=\\\"tabpanel\\\">\\n            <h4>\\n              {{ 'AbpIdentity::PersonalSettings' | abpLocalization }}\\n              <hr />\\n            </h4>\\n            <abp-personal-settings-form\\n              *abpReplaceableTemplate=\\\"{\\n                componentKey: personalSettingsKey\\n              }\\\"\\n            ></abp-personal-settings-form>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\",\n                animations: [trigger('fadeIn', [transition(':enter', useAnimation(fadeIn))])],\n                styles: [`\n      .min-h-400 {\n        min-height: 400px;\n      }\n    `]\n            }]\n    }], function () { return [{ type: ɵngcc1.ProfileService }, { type: ManageProfileStateService }]; }, null); })();\n\nconst { maxLength: maxLength$1, required: required$2, email: email$1 } = Validators;\r\nclass RegisterComponent {\r\n    constructor(fb, accountService, configState, toasterService, authService, injector) {\r\n        this.fb = fb;\r\n        this.accountService = accountService;\r\n        this.configState = configState;\r\n        this.toasterService = toasterService;\r\n        this.authService = authService;\r\n        this.injector = injector;\r\n        this.isSelfRegistrationEnabled = true;\r\n        this.authWrapperKey = \"Account.AuthWrapperComponent\" /* AuthWrapper */;\r\n    }\r\n    ngOnInit() {\r\n        this.init();\r\n        this.buildForm();\r\n    }\r\n    init() {\r\n        this.isSelfRegistrationEnabled =\r\n            (this.configState.getSetting('Abp.Account.IsSelfRegistrationEnabled') || '').toLowerCase() !==\r\n                'false';\r\n        if (!this.isSelfRegistrationEnabled) {\r\n            this.toasterService.warn({\r\n                key: 'AbpAccount::SelfRegistrationDisabledMessage',\r\n                defaultValue: 'Self registration is disabled.',\r\n            }, null, { life: 10000 });\r\n            return;\r\n        }\r\n    }\r\n    buildForm() {\r\n        this.form = this.fb.group({\r\n            username: ['', [required$2, maxLength$1(255)]],\r\n            password: ['', [required$2, ...getPasswordValidators(this.injector)]],\r\n            email: ['', [required$2, email$1]],\r\n        });\r\n    }\r\n    onSubmit() {\r\n        if (this.form.invalid)\r\n            return;\r\n        this.inProgress = true;\r\n        const newUser = {\r\n            userName: this.form.get('username').value,\r\n            password: this.form.get('password').value,\r\n            emailAddress: this.form.get('email').value,\r\n            appName: 'Angular',\r\n        };\r\n        this.accountService\r\n            .register(newUser)\r\n            .pipe(switchMap(() => this.authService.login({\r\n            username: newUser.userName,\r\n            password: newUser.password,\r\n            redirectUrl: getRedirectUrl(this.injector),\r\n        })), catchError(err => {\r\n            this.toasterService.error(snq(() => err.error.error_description) ||\r\n                snq(() => err.error.error.message, 'AbpAccount::DefaultErrorMessage'), 'Error', { life: 7000 });\r\n            return throwError(err);\r\n        }), finalize(() => (this.inProgress = false)))\r\n            .subscribe();\r\n    }\r\n}\nRegisterComponent.ɵfac = function RegisterComponent_Factory(t) { return new (t || RegisterComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc4.FormBuilder), ɵngcc0.ɵɵdirectiveInject(AccountService), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.ConfigStateService), ɵngcc0.ɵɵdirectiveInject(ɵngcc6.ToasterService), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.AuthService), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Injector)); };\nRegisterComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: RegisterComponent, selectors: [[\"abp-register\"]], decls: 10, vars: 10, consts: [[\"routerLink\", \"/account/login\", 1, \"text-decoration-none\"], [\"validateOnSubmit\", \"\", \"class\", \"mt-4\", 3, \"formGroup\", \"ngSubmit\", 4, \"ngIf\"], [\"validateOnSubmit\", \"\", 1, \"mt-4\", 3, \"formGroup\", \"ngSubmit\"], [1, \"form-group\"], [\"for\", \"input-user-name\"], [\"autofocus\", \"\", \"type\", \"text\", \"id\", \"input-user-name\", \"formControlName\", \"username\", \"autocomplete\", \"username\", 1, \"form-control\"], [\"for\", \"input-email-address\"], [\"type\", \"email\", \"id\", \"input-email-address\", \"formControlName\", \"email\", 1, \"form-control\"], [\"for\", \"input-password\"], [\"type\", \"password\", \"id\", \"input-password\", \"formControlName\", \"password\", \"autocomplete\", \"current-password\", 1, \"form-control\"], [\"buttonType\", \"submit\", \"name\", \"Action\", \"buttonClass\", \"btn-block btn-lg mt-3 btn btn-primary\", 3, \"loading\"]], template: function RegisterComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"h4\");\n        ɵngcc0.ɵɵtext(1);\n        ɵngcc0.ɵɵpipe(2, \"abpLocalization\");\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(3, \"strong\");\n        ɵngcc0.ɵɵtext(4);\n        ɵngcc0.ɵɵpipe(5, \"abpLocalization\");\n        ɵngcc0.ɵɵelementStart(6, \"a\", 0);\n        ɵngcc0.ɵɵtext(7);\n        ɵngcc0.ɵɵpipe(8, \"abpLocalization\");\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtemplate(9, RegisterComponent_form_9_Template, 25, 14, \"form\", 1);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(2, 4, \"AbpAccount::Register\"));\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵtextInterpolate1(\" \", ɵngcc0.ɵɵpipeBind1(5, 6, \"AbpAccount::AlreadyRegistered\"), \" \");\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(8, 8, \"AbpAccount::Login\"));\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.isSelfRegistrationEnabled);\n    } }, directives: [ɵngcc3.RouterLinkWithHref, ɵngcc2.NgIf, ɵngcc4.ɵangular_packages_forms_forms_y, ɵngcc4.NgControlStatusGroup, ɵngcc1.FormSubmitDirective, ɵngcc4.FormGroupDirective, ɵngcc5.ValidationGroupDirective, ɵngcc4.DefaultValueAccessor, ɵngcc1.AutofocusDirective, ɵngcc4.NgControlStatus, ɵngcc4.FormControlName, ɵngcc5.ValidationDirective, ɵngcc6.ButtonComponent], pipes: [ɵngcc1.LocalizationPipe], encapsulation: 2 });\r\nRegisterComponent.ctorParameters = () => [\r\n    { type: FormBuilder },\r\n    { type: AccountService },\r\n    { type: ConfigStateService },\r\n    { type: ToasterService },\r\n    { type: AuthService },\r\n    { type: Injector }\r\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(RegisterComponent, [{\n        type: Component,\n        args: [{\n                selector: 'abp-register',\n                template: \"<h4>{{ 'AbpAccount::Register' | abpLocalization }}</h4>\\n<strong>\\n  {{ 'AbpAccount::AlreadyRegistered' | abpLocalization }}\\n  <a class=\\\"text-decoration-none\\\" routerLink=\\\"/account/login\\\">{{\\n    'AbpAccount::Login' | abpLocalization\\n  }}</a>\\n</strong>\\n<form\\n  *ngIf=\\\"isSelfRegistrationEnabled\\\"\\n  [formGroup]=\\\"form\\\"\\n  (ngSubmit)=\\\"onSubmit()\\\"\\n  validateOnSubmit\\n  class=\\\"mt-4\\\"\\n>\\n  <div class=\\\"form-group\\\">\\n    <label for=\\\"input-user-name\\\">{{ 'AbpAccount::UserName' | abpLocalization }}</label\\n    ><span> * </span\\n    ><input\\n      autofocus\\n      type=\\\"text\\\"\\n      id=\\\"input-user-name\\\"\\n      class=\\\"form-control\\\"\\n      formControlName=\\\"username\\\"\\n      autocomplete=\\\"username\\\"\\n    />\\n  </div>\\n  <div class=\\\"form-group\\\">\\n    <label for=\\\"input-email-address\\\">{{ 'AbpAccount::EmailAddress' | abpLocalization }}</label\\n    ><span> * </span\\n    ><input type=\\\"email\\\" id=\\\"input-email-address\\\" class=\\\"form-control\\\" formControlName=\\\"email\\\" />\\n  </div>\\n  <div class=\\\"form-group\\\">\\n    <label for=\\\"input-password\\\">{{ 'AbpAccount::Password' | abpLocalization }}</label\\n    ><span> * </span\\n    ><input\\n      type=\\\"password\\\"\\n      id=\\\"input-password\\\"\\n      class=\\\"form-control\\\"\\n      formControlName=\\\"password\\\"\\n      autocomplete=\\\"current-password\\\"\\n    />\\n  </div>\\n  <abp-button\\n    [loading]=\\\"inProgress\\\"\\n    buttonType=\\\"submit\\\"\\n    name=\\\"Action\\\"\\n    buttonClass=\\\"btn-block btn-lg mt-3 btn btn-primary\\\"\\n  >\\n    {{ 'AbpAccount::Register' | abpLocalization }}\\n  </abp-button>\\n</form>\\n\"\n            }]\n    }], function () { return [{ type: ɵngcc4.FormBuilder }, { type: AccountService }, { type: ɵngcc1.ConfigStateService }, { type: ɵngcc6.ToasterService }, { type: ɵngcc1.AuthService }, { type: ɵngcc0.Injector }]; }, null); })();\n\nconst PASSWORD_FIELDS$1 = ['password', 'confirmPassword'];\r\nclass ResetPasswordComponent {\r\n    constructor(fb, accountService, route, router, injector) {\r\n        this.fb = fb;\r\n        this.accountService = accountService;\r\n        this.route = route;\r\n        this.router = router;\r\n        this.injector = injector;\r\n        this.inProgress = false;\r\n        this.isPasswordReset = false;\r\n        this.mapErrorsFn = (errors, groupErrors, control) => {\r\n            if (PASSWORD_FIELDS$1.indexOf(String(control.name)) < 0)\r\n                return errors;\r\n            return errors.concat(groupErrors.filter(({ key }) => key === 'passwordMismatch'));\r\n        };\r\n    }\r\n    ngOnInit() {\r\n        this.route.queryParams.subscribe(({ userId, resetToken }) => {\r\n            if (!userId || !resetToken)\r\n                this.router.navigateByUrl('/account/login');\r\n            this.form = this.fb.group({\r\n                userId: [userId, [Validators.required]],\r\n                resetToken: [resetToken, [Validators.required]],\r\n                password: ['', [Validators.required, ...getPasswordValidators(this.injector)]],\r\n                confirmPassword: ['', [Validators.required, ...getPasswordValidators(this.injector)]],\r\n            }, {\r\n                validators: [comparePasswords(PASSWORD_FIELDS$1)],\r\n            });\r\n        });\r\n    }\r\n    onSubmit() {\r\n        if (this.form.invalid || this.inProgress)\r\n            return;\r\n        this.inProgress = true;\r\n        this.accountService\r\n            .resetPassword({\r\n            userId: this.form.get('userId').value,\r\n            resetToken: this.form.get('resetToken').value,\r\n            password: this.form.get('password').value,\r\n        })\r\n            .pipe(finalize(() => (this.inProgress = false)))\r\n            .subscribe(() => {\r\n            this.isPasswordReset = true;\r\n        });\r\n    }\r\n}\nResetPasswordComponent.ɵfac = function ResetPasswordComponent_Factory(t) { return new (t || ResetPasswordComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc4.FormBuilder), ɵngcc0.ɵɵdirectiveInject(AccountService), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.ActivatedRoute), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.Router), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Injector)); };\nResetPasswordComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: ResetPasswordComponent, selectors: [[\"abp-reset-password\"]], decls: 6, vars: 5, consts: [[\"validateOnSubmit\", \"\", 3, \"formGroup\", \"mapErrorsFn\", \"ngSubmit\", 4, \"ngIf\", \"ngIfElse\"], [\"passwordResetTemplate\", \"\"], [\"validateOnSubmit\", \"\", 3, \"formGroup\", \"mapErrorsFn\", \"ngSubmit\"], [1, \"form-group\"], [\"for\", \"input-password\"], [\"type\", \"password\", \"id\", \"input-password\", \"formControlName\", \"password\", 1, \"form-control\"], [\"for\", \"input-confirm-password\"], [\"type\", \"password\", \"id\", \"input-confirm-password\", \"formControlName\", \"confirmPassword\", 1, \"form-control\"], [\"type\", \"button\", \"routerLink\", \"/account/login\", 1, \"mr-2\", \"btn\", \"btn-secondary\"], [\"buttonType\", \"submit\", \"buttonClass\", \"mr-2 btn btn-primary\", 3, \"loading\", \"click\"], [\"routerLink\", \"/account/login\"], [1, \"d-block\", \"mt-2\", \"mb-3\", \"btn\", \"btn-primary\"]], template: function ResetPasswordComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"h4\");\n        ɵngcc0.ɵɵtext(1);\n        ɵngcc0.ɵɵpipe(2, \"abpLocalization\");\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtemplate(3, ResetPasswordComponent_form_3_Template, 24, 18, \"form\", 0);\n        ɵngcc0.ɵɵtemplate(4, ResetPasswordComponent_ng_template_4_Template, 7, 6, \"ng-template\", null, 1, ɵngcc0.ɵɵtemplateRefExtractor);\n    } if (rf & 2) {\n        const _r1 = ɵngcc0.ɵɵreference(5);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(2, 3, \"AbpAccount::ResetPassword\"));\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"ngIf\", !ctx.isPasswordReset)(\"ngIfElse\", _r1);\n    } }, directives: [ɵngcc2.NgIf, ɵngcc4.ɵangular_packages_forms_forms_y, ɵngcc4.NgControlStatusGroup, ɵngcc1.FormSubmitDirective, ɵngcc4.FormGroupDirective, ɵngcc5.ValidationGroupDirective, ɵngcc4.DefaultValueAccessor, ɵngcc4.NgControlStatus, ɵngcc4.FormControlName, ɵngcc5.ValidationDirective, ɵngcc3.RouterLink, ɵngcc6.ButtonComponent, ɵngcc3.RouterLinkWithHref], pipes: [ɵngcc1.LocalizationPipe], encapsulation: 2 });\r\nResetPasswordComponent.ctorParameters = () => [\r\n    { type: FormBuilder },\r\n    { type: AccountService },\r\n    { type: ActivatedRoute },\r\n    { type: Router },\r\n    { type: Injector }\r\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ResetPasswordComponent, [{\n        type: Component,\n        args: [{\n                selector: 'abp-reset-password',\n                template: \"<h4>{{ 'AbpAccount::ResetPassword' | abpLocalization }}</h4>\\n\\n<form\\n  *ngIf=\\\"!isPasswordReset; else passwordResetTemplate\\\"\\n  [formGroup]=\\\"form\\\"\\n  [mapErrorsFn]=\\\"mapErrorsFn\\\"\\n  (ngSubmit)=\\\"onSubmit()\\\"\\n  validateOnSubmit\\n>\\n  <p>{{ 'AbpAccount::ResetPassword_Information' | abpLocalization }}</p>\\n  <div class=\\\"form-group\\\">\\n    <label for=\\\"input-password\\\">{{ 'AbpAccount::Password' | abpLocalization }}</label\\n    ><span> * </span>\\n    <input type=\\\"password\\\" id=\\\"input-password\\\" class=\\\"form-control\\\" formControlName=\\\"password\\\" />\\n  </div>\\n  <div class=\\\"form-group\\\">\\n    <label for=\\\"input-confirm-password\\\">{{ 'AbpAccount::ConfirmPassword' | abpLocalization }}</label\\n    ><span> * </span>\\n    <input\\n      type=\\\"password\\\"\\n      id=\\\"input-confirm-password\\\"\\n      class=\\\"form-control\\\"\\n      formControlName=\\\"confirmPassword\\\"\\n    />\\n  </div>\\n  <button class=\\\"mr-2 btn btn-secondary\\\" type=\\\"button\\\" routerLink=\\\"/account/login\\\">\\n    {{ 'AbpAccount::Cancel' | abpLocalization }}\\n  </button>\\n  <abp-button\\n    buttonType=\\\"submit\\\"\\n    buttonClass=\\\"mr-2 btn btn-primary\\\"\\n    [loading]=\\\"inProgress\\\"\\n    (click)=\\\"onSubmit()\\\"\\n  >\\n    {{ 'AbpAccount::Submit' | abpLocalization }}\\n  </abp-button>\\n</form>\\n\\n<ng-template #passwordResetTemplate>\\n  <p>\\n    {{ 'AbpAccount::YourPasswordIsSuccessfullyReset' | abpLocalization }}\\n  </p>\\n\\n  <a routerLink=\\\"/account/login\\\">\\n    <button class=\\\"d-block mt-2 mb-3 btn btn-primary\\\">\\n      {{ 'AbpAccount::BackToLogin' | abpLocalization }}\\n    </button>\\n  </a>\\n</ng-template>\\n\"\n            }]\n    }], function () { return [{ type: ɵngcc4.FormBuilder }, { type: AccountService }, { type: ɵngcc3.ActivatedRoute }, { type: ɵngcc3.Router }, { type: ɵngcc0.Injector }]; }, null); })();\n\nclass AuthenticationFlowGuard {\r\n    constructor(authService) {\r\n        this.authService = authService;\r\n    }\r\n    canActivate() {\r\n        if (this.authService.isInternalAuth)\r\n            return true;\r\n        this.authService.navigateToLogin();\r\n        return false;\r\n    }\r\n}\nAuthenticationFlowGuard.ɵfac = function AuthenticationFlowGuard_Factory(t) { return new (t || AuthenticationFlowGuard)(ɵngcc0.ɵɵinject(ɵngcc1.AuthService)); };\nAuthenticationFlowGuard.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: AuthenticationFlowGuard, factory: AuthenticationFlowGuard.ɵfac });\r\nAuthenticationFlowGuard.ctorParameters = () => [\r\n    { type: AuthService }\r\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(AuthenticationFlowGuard, [{\n        type: Injectable\n    }], function () { return [{ type: ɵngcc1.AuthService }]; }, null); })();\n\nconst ɵ0 = {\r\n    replaceableComponent: {\r\n        key: \"Account.AuthWrapperComponent\" /* AuthWrapper */,\r\n        defaultComponent: AuthWrapperComponent,\r\n    },\r\n}, ɵ1 = {\r\n    replaceableComponent: {\r\n        key: \"Account.LoginComponent\" /* Login */,\r\n        defaultComponent: LoginComponent,\r\n    },\r\n}, ɵ2 = {\r\n    replaceableComponent: {\r\n        key: \"Account.RegisterComponent\" /* Register */,\r\n        defaultComponent: RegisterComponent,\r\n    },\r\n}, ɵ3 = {\r\n    replaceableComponent: {\r\n        key: \"Account.ForgotPasswordComponent\" /* ForgotPassword */,\r\n        defaultComponent: ForgotPasswordComponent,\r\n    },\r\n}, ɵ4 = {\r\n    replaceableComponent: {\r\n        key: \"Account.ResetPasswordComponent\" /* ResetPassword */,\r\n        defaultComponent: ResetPasswordComponent,\r\n    },\r\n}, ɵ5 = {\r\n    replaceableComponent: {\r\n        key: \"Account.ManageProfileComponent\" /* ManageProfile */,\r\n        defaultComponent: ManageProfileComponent,\r\n    },\r\n};\r\nconst routes = [\r\n    { path: '', pathMatch: 'full', redirectTo: 'login' },\r\n    {\r\n        path: '',\r\n        component: DynamicLayoutComponent,\r\n        children: [\r\n            {\r\n                path: '',\r\n                component: ReplaceableRouteContainerComponent,\r\n                data: ɵ0,\r\n                children: [\r\n                    {\r\n                        path: 'login',\r\n                        component: ReplaceableRouteContainerComponent,\r\n                        canActivate: [AuthenticationFlowGuard],\r\n                        data: ɵ1,\r\n                    },\r\n                    {\r\n                        path: 'register',\r\n                        component: ReplaceableRouteContainerComponent,\r\n                        canActivate: [AuthenticationFlowGuard],\r\n                        data: ɵ2,\r\n                    },\r\n                    {\r\n                        path: 'forgot-password',\r\n                        component: ReplaceableRouteContainerComponent,\r\n                        canActivate: [AuthenticationFlowGuard],\r\n                        data: ɵ3,\r\n                    },\r\n                    {\r\n                        path: 'reset-password',\r\n                        component: ReplaceableRouteContainerComponent,\r\n                        canActivate: [AuthenticationFlowGuard],\r\n                        data: ɵ4,\r\n                    },\r\n                ],\r\n            },\r\n            {\r\n                path: 'manage',\r\n                component: ReplaceableRouteContainerComponent,\r\n                canActivate: [AuthGuard],\r\n                data: ɵ5,\r\n            },\r\n        ],\r\n    },\r\n];\r\nclass AccountRoutingModule {\r\n}\nAccountRoutingModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: AccountRoutingModule });\nAccountRoutingModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function AccountRoutingModule_Factory(t) { return new (t || AccountRoutingModule)(); }, imports: [[RouterModule.forChild(routes)], RouterModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(AccountRoutingModule, { imports: function () { return [ɵngcc3.RouterModule]; }, exports: function () { return [RouterModule]; } }); })();\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(AccountRoutingModule, [{\n        type: NgModule,\n        args: [{\n                imports: [RouterModule.forChild(routes)],\n                exports: [RouterModule]\n            }]\n    }], null, null); })();\n\nconst { required: required$1 } = Validators;\r\nconst PASSWORD_FIELDS = ['newPassword', 'repeatNewPassword'];\r\nclass ChangePasswordComponent {\r\n    constructor(fb, injector, toasterService, profileService, manageProfileState) {\r\n        this.fb = fb;\r\n        this.injector = injector;\r\n        this.toasterService = toasterService;\r\n        this.profileService = profileService;\r\n        this.manageProfileState = manageProfileState;\r\n        this.mapErrorsFn = (errors, groupErrors, control) => {\r\n            if (PASSWORD_FIELDS.indexOf(String(control.name)) < 0)\r\n                return errors;\r\n            return errors.concat(groupErrors.filter(({ key }) => key === 'passwordMismatch'));\r\n        };\r\n    }\r\n    ngOnInit() {\r\n        var _a;\r\n        this.hideCurrentPassword = !((_a = this.manageProfileState.getProfile()) === null || _a === void 0 ? void 0 : _a.hasPassword);\r\n        const passwordValidations = getPasswordValidators(this.injector);\r\n        this.form = this.fb.group({\r\n            password: ['', required$1],\r\n            newPassword: [\r\n                '',\r\n                {\r\n                    validators: [required$1, ...passwordValidations],\r\n                },\r\n            ],\r\n            repeatNewPassword: [\r\n                '',\r\n                {\r\n                    validators: [required$1, ...passwordValidations],\r\n                },\r\n            ],\r\n        }, {\r\n            validators: [comparePasswords(PASSWORD_FIELDS)],\r\n        });\r\n        if (this.hideCurrentPassword)\r\n            this.form.removeControl('password');\r\n    }\r\n    onSubmit() {\r\n        if (this.form.invalid)\r\n            return;\r\n        this.inProgress = true;\r\n        this.profileService\r\n            .changePassword(Object.assign(Object.assign({}, (!this.hideCurrentPassword && { currentPassword: this.form.get('password').value })), { newPassword: this.form.get('newPassword').value }))\r\n            .pipe(finalize(() => (this.inProgress = false)))\r\n            .subscribe({\r\n            next: () => {\r\n                this.form.reset();\r\n                this.toasterService.success('AbpAccount::PasswordChangedMessage', '', {\r\n                    life: 5000,\r\n                });\r\n                if (this.hideCurrentPassword) {\r\n                    this.hideCurrentPassword = false;\r\n                    this.form.addControl('password', new FormControl('', [required$1]));\r\n                }\r\n            },\r\n            error: err => {\r\n                this.toasterService.error(snq(() => err.error.error.message, 'AbpAccount::DefaultErrorMessage'));\r\n            },\r\n        });\r\n    }\r\n}\nChangePasswordComponent.ɵfac = function ChangePasswordComponent_Factory(t) { return new (t || ChangePasswordComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc4.FormBuilder), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Injector), ɵngcc0.ɵɵdirectiveInject(ɵngcc6.ToasterService), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.ProfileService), ɵngcc0.ɵɵdirectiveInject(ManageProfileStateService)); };\nChangePasswordComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: ChangePasswordComponent, selectors: [[\"abp-change-password-form\"]], exportAs: [\"abpChangePasswordForm\"], decls: 19, vars: 14, consts: [[\"validateOnSubmit\", \"\", 3, \"formGroup\", \"mapErrorsFn\", \"ngSubmit\"], [\"class\", \"form-group\", 4, \"ngIf\"], [1, \"form-group\"], [\"for\", \"new-password\"], [\"type\", \"password\", \"id\", \"new-password\", \"formControlName\", \"newPassword\", \"autocomplete\", \"new-password\", 1, \"form-control\"], [\"for\", \"confirm-new-password\"], [\"type\", \"password\", \"id\", \"confirm-new-password\", \"formControlName\", \"repeatNewPassword\", \"autocomplete\", \"new-password\", 1, \"form-control\"], [\"iconClass\", \"fa fa-check\", \"buttonClass\", \"btn btn-primary color-white\", \"buttonType\", \"submit\", 3, \"loading\", \"disabled\"], [\"for\", \"current-password\"], [\"type\", \"password\", \"id\", \"current-password\", \"formControlName\", \"password\", \"autofocus\", \"\", \"autocomplete\", \"current-password\", 1, \"form-control\"]], template: function ChangePasswordComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"form\", 0);\n        ɵngcc0.ɵɵlistener(\"ngSubmit\", function ChangePasswordComponent_Template_form_ngSubmit_0_listener() { return ctx.onSubmit(); });\n        ɵngcc0.ɵɵtemplate(1, ChangePasswordComponent_div_1_Template, 7, 3, \"div\", 1);\n        ɵngcc0.ɵɵelementStart(2, \"div\", 2);\n        ɵngcc0.ɵɵelementStart(3, \"label\", 3);\n        ɵngcc0.ɵɵtext(4);\n        ɵngcc0.ɵɵpipe(5, \"abpLocalization\");\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(6, \"span\");\n        ɵngcc0.ɵɵtext(7, \" * \");\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelement(8, \"input\", 4);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(9, \"div\", 2);\n        ɵngcc0.ɵɵelementStart(10, \"label\", 5);\n        ɵngcc0.ɵɵtext(11);\n        ɵngcc0.ɵɵpipe(12, \"abpLocalization\");\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(13, \"span\");\n        ɵngcc0.ɵɵtext(14, \" * \");\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelement(15, \"input\", 6);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(16, \"abp-button\", 7);\n        ɵngcc0.ɵɵtext(17);\n        ɵngcc0.ɵɵpipe(18, \"abpLocalization\");\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"formGroup\", ctx.form)(\"mapErrorsFn\", ctx.mapErrorsFn);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", !ctx.hideCurrentPassword);\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(5, 8, \"AbpIdentity::DisplayName:NewPassword\"));\n        ɵngcc0.ɵɵadvance(7);\n        ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(12, 10, \"AbpIdentity::DisplayName:NewPasswordConfirm\"));\n        ɵngcc0.ɵɵadvance(5);\n        ɵngcc0.ɵɵproperty(\"loading\", ctx.inProgress)(\"disabled\", ctx.form == null ? null : ctx.form.invalid);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(18, 12, \"AbpIdentity::Save\"));\n    } }, directives: [ɵngcc4.ɵangular_packages_forms_forms_y, ɵngcc4.NgControlStatusGroup, ɵngcc1.FormSubmitDirective, ɵngcc4.FormGroupDirective, ɵngcc5.ValidationGroupDirective, ɵngcc2.NgIf, ɵngcc4.DefaultValueAccessor, ɵngcc4.NgControlStatus, ɵngcc4.FormControlName, ɵngcc5.ValidationDirective, ɵngcc6.ButtonComponent, ɵngcc1.AutofocusDirective], pipes: [ɵngcc1.LocalizationPipe], encapsulation: 2 });\r\nChangePasswordComponent.ctorParameters = () => [\r\n    { type: FormBuilder },\r\n    { type: Injector },\r\n    { type: ToasterService },\r\n    { type: ProfileService },\r\n    { type: ManageProfileStateService }\r\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ChangePasswordComponent, [{\n        type: Component,\n        args: [{\n                selector: 'abp-change-password-form',\n                template: \"<form [formGroup]=\\\"form\\\" (ngSubmit)=\\\"onSubmit()\\\" [mapErrorsFn]=\\\"mapErrorsFn\\\" validateOnSubmit>\\n  <div *ngIf=\\\"!hideCurrentPassword\\\" class=\\\"form-group\\\">\\n    <label for=\\\"current-password\\\">{{\\n      'AbpIdentity::DisplayName:CurrentPassword' | abpLocalization\\n    }}</label\\n    ><span> * </span\\n    ><input\\n      type=\\\"password\\\"\\n      id=\\\"current-password\\\"\\n      class=\\\"form-control\\\"\\n      formControlName=\\\"password\\\"\\n      autofocus\\n      autocomplete=\\\"current-password\\\"\\n    />\\n  </div>\\n  <div class=\\\"form-group\\\">\\n    <label for=\\\"new-password\\\">{{ 'AbpIdentity::DisplayName:NewPassword' | abpLocalization }}</label\\n    ><span> * </span\\n    ><input\\n      type=\\\"password\\\"\\n      id=\\\"new-password\\\"\\n      class=\\\"form-control\\\"\\n      formControlName=\\\"newPassword\\\"\\n      autocomplete=\\\"new-password\\\"\\n    />\\n  </div>\\n  <div class=\\\"form-group\\\">\\n    <label for=\\\"confirm-new-password\\\">{{\\n      'AbpIdentity::DisplayName:NewPasswordConfirm' | abpLocalization\\n    }}</label\\n    ><span> * </span\\n    ><input\\n      type=\\\"password\\\"\\n      id=\\\"confirm-new-password\\\"\\n      class=\\\"form-control\\\"\\n      formControlName=\\\"repeatNewPassword\\\"\\n      autocomplete=\\\"new-password\\\"\\n    />\\n  </div>\\n  <abp-button\\n    iconClass=\\\"fa fa-check\\\"\\n    buttonClass=\\\"btn btn-primary color-white\\\"\\n    buttonType=\\\"submit\\\"\\n    [loading]=\\\"inProgress\\\"\\n    [disabled]=\\\"form?.invalid\\\"\\n    >{{ 'AbpIdentity::Save' | abpLocalization }}</abp-button\\n  >\\n</form>\\n\",\n                exportAs: 'abpChangePasswordForm'\n            }]\n    }], function () { return [{ type: ɵngcc4.FormBuilder }, { type: ɵngcc0.Injector }, { type: ɵngcc6.ToasterService }, { type: ɵngcc1.ProfileService }, { type: ManageProfileStateService }]; }, null); })();\n\nconst { maxLength, required, email } = Validators;\r\nclass PersonalSettingsComponent {\r\n    constructor(fb, toasterService, profileService, manageProfileState) {\r\n        this.fb = fb;\r\n        this.toasterService = toasterService;\r\n        this.profileService = profileService;\r\n        this.manageProfileState = manageProfileState;\r\n    }\r\n    ngOnInit() {\r\n        this.buildForm();\r\n    }\r\n    buildForm() {\r\n        const profile = this.manageProfileState.getProfile();\r\n        this.form = this.fb.group({\r\n            userName: [profile.userName, [required, maxLength(256)]],\r\n            email: [profile.email, [required, email, maxLength(256)]],\r\n            name: [profile.name || '', [maxLength(64)]],\r\n            surname: [profile.surname || '', [maxLength(64)]],\r\n            phoneNumber: [profile.phoneNumber || '', [maxLength(16)]],\r\n        });\r\n    }\r\n    submit() {\r\n        if (this.form.invalid)\r\n            return;\r\n        this.inProgress = true;\r\n        this.profileService\r\n            .update(this.form.value)\r\n            .pipe(finalize(() => (this.inProgress = false)))\r\n            .subscribe(profile => {\r\n            this.manageProfileState.setProfile(profile);\r\n            this.toasterService.success('AbpAccount::PersonalSettingsSaved', 'Success', { life: 5000 });\r\n        });\r\n    }\r\n}\nPersonalSettingsComponent.ɵfac = function PersonalSettingsComponent_Factory(t) { return new (t || PersonalSettingsComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc4.FormBuilder), ɵngcc0.ɵɵdirectiveInject(ɵngcc6.ToasterService), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.ProfileService), ɵngcc0.ɵɵdirectiveInject(ManageProfileStateService)); };\nPersonalSettingsComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: PersonalSettingsComponent, selectors: [[\"abp-personal-settings-form\"]], exportAs: [\"abpPersonalSettingsForm\"], decls: 1, vars: 1, consts: [[\"validateOnSubmit\", \"\", 3, \"formGroup\", \"ngSubmit\", 4, \"ngIf\"], [\"validateOnSubmit\", \"\", 3, \"formGroup\", \"ngSubmit\"], [1, \"form-group\"], [\"for\", \"username\"], [\"type\", \"text\", \"id\", \"username\", \"formControlName\", \"userName\", \"autofocus\", \"\", 1, \"form-control\", 3, \"keydown.space\"], [1, \"row\"], [1, \"col\", \"col-md-6\"], [\"for\", \"name\"], [\"type\", \"text\", \"id\", \"name\", \"formControlName\", \"name\", 1, \"form-control\"], [\"for\", \"surname\"], [\"type\", \"text\", \"id\", \"surname\", \"formControlName\", \"surname\", 1, \"form-control\"], [\"for\", \"email-address\"], [\"type\", \"text\", \"id\", \"email-address\", \"formControlName\", \"email\", 1, \"form-control\"], [\"for\", \"phone-number\"], [\"type\", \"text\", \"id\", \"phone-number\", \"formControlName\", \"phoneNumber\", 1, \"form-control\"], [\"buttonType\", \"submit\", \"iconClass\", \"fa fa-check\", \"buttonClass\", \"btn btn-primary color-white\", 3, \"loading\", \"disabled\"]], template: function PersonalSettingsComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵtemplate(0, PersonalSettingsComponent_form_0_Template, 36, 21, \"form\", 0);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.form);\n    } }, directives: [ɵngcc2.NgIf, ɵngcc4.ɵangular_packages_forms_forms_y, ɵngcc4.NgControlStatusGroup, ɵngcc1.FormSubmitDirective, ɵngcc4.FormGroupDirective, ɵngcc5.ValidationGroupDirective, ɵngcc4.DefaultValueAccessor, ɵngcc4.NgControlStatus, ɵngcc4.FormControlName, ɵngcc5.ValidationDirective, ɵngcc1.AutofocusDirective, ɵngcc6.ButtonComponent], pipes: [ɵngcc1.LocalizationPipe], encapsulation: 2 });\r\nPersonalSettingsComponent.ctorParameters = () => [\r\n    { type: FormBuilder },\r\n    { type: ToasterService },\r\n    { type: ProfileService },\r\n    { type: ManageProfileStateService }\r\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(PersonalSettingsComponent, [{\n        type: Component,\n        args: [{\n                selector: 'abp-personal-settings-form',\n                template: \"<form validateOnSubmit *ngIf=\\\"form\\\" [formGroup]=\\\"form\\\" (ngSubmit)=\\\"submit()\\\">\\n  <div class=\\\"form-group\\\">\\n    <label for=\\\"username\\\">{{ 'AbpIdentity::DisplayName:UserName' | abpLocalization }}</label\\n    ><span> * </span\\n    ><input\\n      type=\\\"text\\\"\\n      id=\\\"username\\\"\\n      class=\\\"form-control\\\"\\n      formControlName=\\\"userName\\\"\\n      autofocus\\n      (keydown.space)=\\\"$event.preventDefault()\\\"\\n    />\\n  </div>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col col-md-6\\\">\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"name\\\">{{ 'AbpIdentity::DisplayName:Name' | abpLocalization }}</label\\n        ><input type=\\\"text\\\" id=\\\"name\\\" class=\\\"form-control\\\" formControlName=\\\"name\\\" />\\n      </div>\\n    </div>\\n    <div class=\\\"col col-md-6\\\">\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"surname\\\">{{ 'AbpIdentity::DisplayName:Surname' | abpLocalization }}</label\\n        ><input type=\\\"text\\\" id=\\\"surname\\\" class=\\\"form-control\\\" formControlName=\\\"surname\\\" />\\n      </div>\\n    </div>\\n  </div>\\n  <div class=\\\"form-group\\\">\\n    <label for=\\\"email-address\\\">{{ 'AbpIdentity::DisplayName:Email' | abpLocalization }}</label\\n    ><span> * </span\\n    ><input type=\\\"text\\\" id=\\\"email-address\\\" class=\\\"form-control\\\" formControlName=\\\"email\\\" />\\n  </div>\\n  <div class=\\\"form-group\\\">\\n    <label for=\\\"phone-number\\\">{{ 'AbpIdentity::DisplayName:PhoneNumber' | abpLocalization }}</label\\n    ><input type=\\\"text\\\" id=\\\"phone-number\\\" class=\\\"form-control\\\" formControlName=\\\"phoneNumber\\\" />\\n  </div>\\n  <abp-button\\n    buttonType=\\\"submit\\\"\\n    iconClass=\\\"fa fa-check\\\"\\n    buttonClass=\\\"btn btn-primary color-white\\\"\\n    [loading]=\\\"inProgress\\\"\\n    [disabled]=\\\"form?.invalid\\\"\\n  >\\n    {{ 'AbpIdentity::Save' | abpLocalization }}</abp-button\\n  >\\n</form>\\n\",\n                exportAs: 'abpPersonalSettingsForm'\n            }]\n    }], function () { return [{ type: ɵngcc4.FormBuilder }, { type: ɵngcc6.ToasterService }, { type: ɵngcc1.ProfileService }, { type: ManageProfileStateService }]; }, null); })();\n\nclass TenantBoxComponent {\r\n    constructor(toasterService, tenantService, sessionState, configState, appConfigService) {\r\n        this.toasterService = toasterService;\r\n        this.tenantService = tenantService;\r\n        this.sessionState = sessionState;\r\n        this.configState = configState;\r\n        this.appConfigService = appConfigService;\r\n        this.currentTenant$ = this.sessionState.getTenant$();\r\n    }\r\n    onSwitch() {\r\n        const tenant = this.sessionState.getTenant();\r\n        this.name = tenant === null || tenant === void 0 ? void 0 : tenant.name;\r\n        this.isModalVisible = true;\r\n    }\r\n    save() {\r\n        if (!this.name) {\r\n            this.setTenant(null);\r\n            this.isModalVisible = false;\r\n            return;\r\n        }\r\n        this.modalBusy = true;\r\n        this.tenantService\r\n            .findTenantByName(this.name, {})\r\n            .pipe(finalize(() => (this.modalBusy = false)))\r\n            .subscribe((_a) => {\r\n            var { success, tenantId: id } = _a, tenant = __rest(_a, [\"success\", \"tenantId\"]);\r\n            if (!success) {\r\n                this.showError();\r\n                return;\r\n            }\r\n            this.setTenant(Object.assign(Object.assign({}, tenant), { id, isAvailable: true }));\r\n            this.isModalVisible = false;\r\n        });\r\n    }\r\n    setTenant(tenant) {\r\n        this.sessionState.setTenant(tenant);\r\n        this.appConfigService.get().subscribe(res => this.configState.setState(res));\r\n    }\r\n    showError() {\r\n        this.toasterService.error('AbpUiMultiTenancy::GivenTenantIsNotAvailable', 'AbpUi::Error', {\r\n            messageLocalizationParams: [this.name],\r\n        });\r\n    }\r\n}\nTenantBoxComponent.ɵfac = function TenantBoxComponent_Factory(t) { return new (t || TenantBoxComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc6.ToasterService), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.AbpTenantService), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.SessionStateService), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.ConfigStateService), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.AbpApplicationConfigurationService)); };\nTenantBoxComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: TenantBoxComponent, selectors: [[\"abp-tenant-box\"]], decls: 2, vars: 4, consts: [[4, \"ngIf\"], [1, \"card\", \"shadow-sm\", \"rounded\", \"mb-3\"], [1, \"card-body\", \"px-5\"], [1, \"row\"], [1, \"col\"], [1, \"text-uppercase\", \"text-muted\", 2, \"font-size\", \"0.8em\"], [1, \"m-0\", \"d-inline-block\"], [1, \"col-auto\"], [\"id\", \"AbpTenantSwitchLink\", \"href\", \"javascript:void(0);\", 1, \"btn\", \"btn-sm\", \"mt-3\", \"btn-outline-primary\", 3, \"click\"], [\"size\", \"md\", 3, \"visible\", \"busy\", \"visibleChange\"], [\"abpHeader\", \"\"], [\"abpBody\", \"\"], [\"abpFooter\", \"\"], [3, \"ngSubmit\"], [1, \"mt-2\"], [1, \"form-group\"], [\"for\", \"name\"], [\"type\", \"text\", \"id\", \"name\", \"name\", \"tenant\", \"autofocus\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"abpClose\", \"\", \"type\", \"button\", 1, \"btn\", \"btn-secondary\"], [\"type\", \"abp-button\", \"iconClass\", \"fa fa-check\", 3, \"disabled\", \"click\"]], template: function TenantBoxComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵtemplate(0, TenantBoxComponent_ng_container_0_Template, 24, 11, \"ng-container\", 0);\n        ɵngcc0.ɵɵpipe(1, \"async\");\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngIf\", ɵngcc0.ɵɵpipeBind1(1, 1, ctx.currentTenant$) || ɵngcc0.ɵɵpureFunction0(3, _c2));\n    } }, directives: [ɵngcc2.NgIf, ɵngcc6.ModalComponent, ɵngcc4.ɵangular_packages_forms_forms_y, ɵngcc4.NgControlStatusGroup, ɵngcc4.NgForm, ɵngcc4.DefaultValueAccessor, ɵngcc1.AutofocusDirective, ɵngcc4.NgControlStatus, ɵngcc4.NgModel, ɵngcc6.ModalCloseDirective, ɵngcc6.ButtonComponent], pipes: [ɵngcc2.AsyncPipe, ɵngcc1.LocalizationPipe], encapsulation: 2 });\r\nTenantBoxComponent.ctorParameters = () => [\r\n    { type: ToasterService },\r\n    { type: AbpTenantService },\r\n    { type: SessionStateService },\r\n    { type: ConfigStateService },\r\n    { type: AbpApplicationConfigurationService }\r\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(TenantBoxComponent, [{\n        type: Component,\n        args: [{\n                selector: 'abp-tenant-box',\n                template: \"<ng-container *ngIf=\\\"(currentTenant$ | async) || {} as currentTenant\\\">\\n  <div class=\\\"card shadow-sm rounded mb-3\\\">\\n    <div class=\\\"card-body px-5\\\">\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col\\\">\\n          <span style=\\\"font-size: 0.8em\\\" class=\\\"text-uppercase text-muted\\\">{{\\n            'AbpUiMultiTenancy::Tenant' | abpLocalization\\n          }}</span\\n          ><br />\\n          <h6 class=\\\"m-0 d-inline-block\\\">\\n            <i>{{ currentTenant.name || ('AbpUiMultiTenancy::NotSelected' | abpLocalization) }}</i>\\n          </h6>\\n        </div>\\n        <div class=\\\"col-auto\\\">\\n          <a\\n            id=\\\"AbpTenantSwitchLink\\\"\\n            href=\\\"javascript:void(0);\\\"\\n            class=\\\"btn btn-sm mt-3 btn-outline-primary\\\"\\n            (click)=\\\"onSwitch()\\\"\\n            >{{ 'AbpUiMultiTenancy::Switch' | abpLocalization }}</a\\n          >\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n\\n  <abp-modal size=\\\"md\\\" [(visible)]=\\\"isModalVisible\\\" [busy]=\\\"modalBusy\\\">\\n    <ng-template #abpHeader>\\n      <h5>Switch Tenant</h5>\\n    </ng-template>\\n    <ng-template #abpBody>\\n      <form (ngSubmit)=\\\"save()\\\">\\n        <div class=\\\"mt-2\\\">\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"name\\\">{{ 'AbpUiMultiTenancy::Name' | abpLocalization }}</label>\\n            <input\\n              [(ngModel)]=\\\"name\\\"\\n              type=\\\"text\\\"\\n              id=\\\"name\\\"\\n              name=\\\"tenant\\\"\\n              class=\\\"form-control\\\"\\n              autofocus\\n            />\\n          </div>\\n          <p>{{ 'AbpUiMultiTenancy::SwitchTenantHint' | abpLocalization }}</p>\\n        </div>\\n      </form>\\n    </ng-template>\\n    <ng-template #abpFooter>\\n      <button abpClose type=\\\"button\\\" class=\\\"btn btn-secondary\\\">\\n        {{ 'AbpTenantManagement::Cancel' | abpLocalization }}\\n      </button>\\n      <abp-button\\n        type=\\\"abp-button\\\"\\n        iconClass=\\\"fa fa-check\\\"\\n        (click)=\\\"save()\\\"\\n        [disabled]=\\\"currentTenant?.name === name\\\"\\n      >\\n        <span>{{ 'AbpTenantManagement::Save' | abpLocalization }}</span>\\n      </abp-button>\\n    </ng-template>\\n  </abp-modal>\\n</ng-container>\\n\"\n            }]\n    }], function () { return [{ type: ɵngcc6.ToasterService }, { type: ɵngcc1.AbpTenantService }, { type: ɵngcc1.SessionStateService }, { type: ɵngcc1.ConfigStateService }, { type: ɵngcc1.AbpApplicationConfigurationService }]; }, null); })();\n\nfunction accountConfigOptionsFactory(options) {\r\n    return Object.assign({ redirectUrl: '/' }, options);\r\n}\n\nconst declarations = [\r\n    AuthWrapperComponent,\r\n    LoginComponent,\r\n    RegisterComponent,\r\n    TenantBoxComponent,\r\n    ChangePasswordComponent,\r\n    ManageProfileComponent,\r\n    PersonalSettingsComponent,\r\n    ForgotPasswordComponent,\r\n    ResetPasswordComponent,\r\n];\r\nclass AccountModule {\r\n    static forChild(options = {}) {\r\n        return {\r\n            ngModule: AccountModule,\r\n            providers: [\r\n                AuthenticationFlowGuard,\r\n                { provide: ACCOUNT_CONFIG_OPTIONS, useValue: options },\r\n                {\r\n                    provide: 'ACCOUNT_OPTIONS',\r\n                    useFactory: accountConfigOptionsFactory,\r\n                    deps: [ACCOUNT_CONFIG_OPTIONS],\r\n                },\r\n            ],\r\n        };\r\n    }\r\n    static forLazy(options = {}) {\r\n        return new LazyModuleFactory(AccountModule.forChild(options));\r\n    }\r\n}\nAccountModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: AccountModule });\nAccountModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function AccountModule_Factory(t) { return new (t || AccountModule)(); }, imports: [[\n            CoreModule,\n            AccountRoutingModule,\n            ThemeSharedModule,\n            NgbDropdownModule,\n            NgxValidateCoreModule,\n        ]] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(AccountModule, { declarations: function () { return [AuthWrapperComponent, LoginComponent, RegisterComponent, TenantBoxComponent, ChangePasswordComponent, ManageProfileComponent, PersonalSettingsComponent, ForgotPasswordComponent, ResetPasswordComponent]; }, imports: function () { return [CoreModule, AccountRoutingModule, ThemeSharedModule,\n        NgbDropdownModule,\n        NgxValidateCoreModule]; }, exports: function () { return [AuthWrapperComponent, LoginComponent, RegisterComponent, TenantBoxComponent, ChangePasswordComponent, ManageProfileComponent, PersonalSettingsComponent, ForgotPasswordComponent, ResetPasswordComponent]; } }); })();\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(AccountModule, [{\n        type: NgModule,\n        args: [{\n                declarations: [...declarations],\n                imports: [\n                    CoreModule,\n                    AccountRoutingModule,\n                    ThemeSharedModule,\n                    NgbDropdownModule,\n                    NgxValidateCoreModule,\n                ],\n                exports: [...declarations]\n            }]\n    }], null, null); })();\n\n/**\r\n * Generated bundle index. Do not edit.\r\n */\n\nexport { ACCOUNT_CONFIG_OPTIONS, AccountModule, AccountService, AuthenticationFlowGuard, ChangePasswordComponent, ForgotPasswordComponent, LoginComponent, ManageProfileComponent, ManageProfileStateService, PersonalSettingsComponent, RegisterComponent, ResetPasswordComponent, TenantBoxComponent, AuthWrapperComponent as ɵa, LoginComponent as ɵb, RegisterComponent as ɵc, AccountService as ɵd, TenantBoxComponent as ɵe, ChangePasswordComponent as ɵf, ManageProfileStateService as ɵg, ManageProfileComponent as ɵh, PersonalSettingsComponent as ɵi, ForgotPasswordComponent as ɵj, ResetPasswordComponent as ɵk, AccountRoutingModule as ɵl, AuthenticationFlowGuard as ɵn, ACCOUNT_CONFIG_OPTIONS as ɵo, accountConfigOptionsFactory as ɵp };\n\n//# sourceMappingURL=abp-ng.account.js.map"],"sourceRoot":"webpack:///"}